-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity invstripe is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    src_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    src_TVALID : IN STD_LOGIC;
    src_TREADY : OUT STD_LOGIC;
    src_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    src_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    src_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    src_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    src_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    src_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    dst_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    dst_TVALID : OUT STD_LOGIC;
    dst_TREADY : IN STD_LOGIC;
    dst_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
    dst_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    dst_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    dst_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    dst_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
    dst_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0);
    f : IN STD_LOGIC_VECTOR (31 downto 0);
    f_ap_vld : IN STD_LOGIC );
end;


architecture behav of invstripe is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "invstripe_invstripe,hls_ip_2023_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=7.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=7.394000,HLS_SYN_LAT=43,HLS_SYN_TPT=20,HLS_SYN_MEM=6,HLS_SYN_DSP=0,HLS_SYN_FF=4121,HLS_SYN_LUT=5640,HLS_VERSION=2023_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000100000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000001000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000010000000";
    constant ap_ST_fsm_pp0_stage8 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000100000000";
    constant ap_ST_fsm_pp0_stage9 : STD_LOGIC_VECTOR (19 downto 0) := "00000000001000000000";
    constant ap_ST_fsm_pp0_stage10 : STD_LOGIC_VECTOR (19 downto 0) := "00000000010000000000";
    constant ap_ST_fsm_pp0_stage11 : STD_LOGIC_VECTOR (19 downto 0) := "00000000100000000000";
    constant ap_ST_fsm_pp0_stage12 : STD_LOGIC_VECTOR (19 downto 0) := "00000001000000000000";
    constant ap_ST_fsm_pp0_stage13 : STD_LOGIC_VECTOR (19 downto 0) := "00000010000000000000";
    constant ap_ST_fsm_pp0_stage14 : STD_LOGIC_VECTOR (19 downto 0) := "00000100000000000000";
    constant ap_ST_fsm_pp0_stage15 : STD_LOGIC_VECTOR (19 downto 0) := "00001000000000000000";
    constant ap_ST_fsm_pp0_stage16 : STD_LOGIC_VECTOR (19 downto 0) := "00010000000000000000";
    constant ap_ST_fsm_pp0_stage17 : STD_LOGIC_VECTOR (19 downto 0) := "00100000000000000000";
    constant ap_ST_fsm_pp0_stage18 : STD_LOGIC_VECTOR (19 downto 0) := "01000000000000000000";
    constant ap_ST_fsm_pp0_stage19 : STD_LOGIC_VECTOR (19 downto 0) := "10000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv16_2CF : STD_LOGIC_VECTOR (15 downto 0) := "0000001011001111";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv16_FD02 : STD_LOGIC_VECTOR (15 downto 0) := "1111110100000010";
    constant ap_const_lv16_101 : STD_LOGIC_VECTOR (15 downto 0) := "0000000100000001";
    constant ap_const_lv16_FF : STD_LOGIC_VECTOR (15 downto 0) := "0000000011111111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv9_181 : STD_LOGIC_VECTOR (8 downto 0) := "110000001";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv16_FC01 : STD_LOGIC_VECTOR (15 downto 0) := "1111110000000001";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv16_47E : STD_LOGIC_VECTOR (15 downto 0) := "0000010001111110";
    constant ap_const_lv8_E7 : STD_LOGIC_VECTOR (7 downto 0) := "11100111";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv8_81 : STD_LOGIC_VECTOR (7 downto 0) := "10000001";
    constant ap_const_lv8_7E : STD_LOGIC_VECTOR (7 downto 0) := "01111110";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_lv8_40 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_const_lv8_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_const_lv8_20 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_const_lv9_FF : STD_LOGIC_VECTOR (8 downto 0) := "011111111";
    constant ap_const_lv31_437F0000 : STD_LOGIC_VECTOR (30 downto 0) := "1000011011111110000000000000000";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";

    signal ap_rst_n_inv : STD_LOGIC;
    signal f_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal f_in_sig : STD_LOGIC_VECTOR (31 downto 0);
    signal f_ap_vld_preg : STD_LOGIC := '0';
    signal f_ap_vld_in_sig : STD_LOGIC;
    signal y : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal x : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal first_r : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal last_r : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    signal first_g : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal last_g : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    signal first_b : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal last_b : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    signal invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_ce0 : STD_LOGIC;
    signal invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_we0 : STD_LOGIC;
    signal invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_ce1 : STD_LOGIC;
    signal invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_we1 : STD_LOGIC;
    signal invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_1_ce0 : STD_LOGIC;
    signal invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_1_we0 : STD_LOGIC;
    signal invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_1_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_1_ce1 : STD_LOGIC;
    signal invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_1_we1 : STD_LOGIC;
    signal invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_1_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_2_ce0 : STD_LOGIC;
    signal invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_2_we0 : STD_LOGIC;
    signal invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_2_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_2_ce1 : STD_LOGIC;
    signal invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_2_we1 : STD_LOGIC;
    signal invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_2_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal scale_r : STD_LOGIC_VECTOR (31 downto 0) := "01000000000000000000000000000000";
    signal scale_g : STD_LOGIC_VECTOR (31 downto 0) := "01000000000000000000000000000000";
    signal scale_b : STD_LOGIC_VECTOR (31 downto 0) := "01000000000000000000000000000000";
    signal threshold : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal stop : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal max : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal src_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal dst_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal f_blk_n : STD_LOGIC;
    signal stop_loc_1_reg_430 : STD_LOGIC_VECTOR (7 downto 0);
    signal threshold_loc_1_reg_443 : STD_LOGIC_VECTOR (31 downto 0);
    signal stop_flag_1_reg_455 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_24_reg_603 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_835 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state22_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state42_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal icmp_ln65_reg_2199 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage19 : signal is "none";
    signal ap_block_state20_pp0_stage19_iter0 : BOOLEAN;
    signal ap_block_state40_pp0_stage19_iter1 : BOOLEAN;
    signal ap_block_pp0_stage19_11001 : BOOLEAN;
    signal icmp_ln86_reg_2223 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln100_reg_2420 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_840 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_845 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state5_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state25_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal icmp_ln87_reg_2273 : STD_LOGIC_VECTOR (0 downto 0);
    signal f_read_reg_2137 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state41_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal p_keep_reg_2147 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_keep_reg_2147_pp0_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal p_keep_reg_2147_pp0_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal p_strb_reg_2152 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_strb_reg_2152_pp0_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal p_strb_reg_2152_pp0_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal p_user_reg_2157 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_user_reg_2157_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_user_reg_2157_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_last_reg_2163 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_last_reg_2163_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_last_reg_2163_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_id_reg_2169 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_id_reg_2169_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_id_reg_2169_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_dest_reg_2174 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_dest_reg_2174_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_dest_reg_2174_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal r_in_fu_878_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_in_reg_2179 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_in_reg_2179_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal b_in_fu_882_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_in_reg_2185 : STD_LOGIC_VECTOR (7 downto 0);
    signal g_in_fu_892_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal g_in_reg_2192 : STD_LOGIC_VECTOR (7 downto 0);
    signal g_in_reg_2192_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln65_fu_914_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln65_reg_2199_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_addr_reg_2203 : STD_LOGIC_VECTOR (7 downto 0);
    signal invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_1_addr_reg_2208 : STD_LOGIC_VECTOR (7 downto 0);
    signal invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_2_addr_reg_2213 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln74_fu_935_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln86_fu_940_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln86_reg_2223_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln86_reg_2223_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln75_fu_972_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln58_fu_980_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln58_reg_2235 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state23_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state43_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal trunc_ln58_fu_987_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln58_reg_2242 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln76_fu_1012_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln87_fu_1016_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln87_reg_2254 : STD_LOGIC_VECTOR (15 downto 0);
    signal first_b_load_reg_2261 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state24_pp0_stage3_iter1 : BOOLEAN;
    signal regslice_both_dst_V_data_V_U_apdone_blk : STD_LOGIC;
    signal ap_block_state44_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal zext_ln76_1_fu_1045_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln87_fu_1050_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln92_fu_1059_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln92_reg_2282 : STD_LOGIC_VECTOR (0 downto 0);
    signal first_g_load_reg_2286 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln75_1_fu_1068_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal first_r_load_reg_2306 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_state7_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_state27_pp0_stage6_iter1 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal grp_fu_827_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_reg_2313 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln74_1_fu_1093_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv2_reg_2323 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_state8_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_state28_pp0_stage7_iter1 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal conv4_reg_2328 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage8 : signal is "none";
    signal ap_block_state9_pp0_stage8_iter0 : BOOLEAN;
    signal ap_block_state29_pp0_stage8_iter1 : BOOLEAN;
    signal ap_block_pp0_stage8_11001 : BOOLEAN;
    signal conv5_reg_2333 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage9 : signal is "none";
    signal ap_block_state10_pp0_stage9_iter0 : BOOLEAN;
    signal ap_block_state30_pp0_stage9_iter1 : BOOLEAN;
    signal ap_block_pp0_stage9_11001 : BOOLEAN;
    signal conv3_reg_2338 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage10 : signal is "none";
    signal ap_block_state11_pp0_stage10_iter0 : BOOLEAN;
    signal ap_block_state31_pp0_stage10_iter1 : BOOLEAN;
    signal ap_block_pp0_stage10_11001 : BOOLEAN;
    signal grp_fu_823_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv6_reg_2343 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage11 : signal is "none";
    signal ap_block_state12_pp0_stage11_iter0 : BOOLEAN;
    signal ap_block_state32_pp0_stage11_iter1 : BOOLEAN;
    signal ap_block_pp0_stage11_11001 : BOOLEAN;
    signal conv1_reg_2348 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage12 : signal is "none";
    signal ap_block_state13_pp0_stage12_iter0 : BOOLEAN;
    signal ap_block_state33_pp0_stage12_iter1 : BOOLEAN;
    signal ap_block_pp0_stage12_11001 : BOOLEAN;
    signal xs_exp_4_reg_2353 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_pp0_stage16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage16 : signal is "none";
    signal ap_block_state17_pp0_stage16_iter0 : BOOLEAN;
    signal ap_block_state37_pp0_stage16_iter1 : BOOLEAN;
    signal ap_block_pp0_stage16_11001 : BOOLEAN;
    signal trunc_ln371_3_fu_1112_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln371_3_reg_2359 : STD_LOGIC_VECTOR (22 downto 0);
    signal ap_CS_fsm_pp0_stage17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage17 : signal is "none";
    signal ap_block_state18_pp0_stage17_iter0 : BOOLEAN;
    signal ap_block_state38_pp0_stage17_iter1 : BOOLEAN;
    signal ap_block_pp0_stage17_11001 : BOOLEAN;
    signal tmp_10_fu_1146_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_reg_2376 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_reg_2381 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_2386 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln100_1_fu_1209_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln100_1_reg_2391 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln100_fu_1212_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln100_reg_2396 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln100_fu_1227_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln100_reg_2401 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln142_fu_1233_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln142_reg_2406 : STD_LOGIC_VECTOR (0 downto 0);
    signal val_3_fu_1241_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage18 : signal is "none";
    signal ap_block_state19_pp0_stage18_iter0 : BOOLEAN;
    signal ap_block_state39_pp0_stage18_iter1 : BOOLEAN;
    signal ap_block_pp0_stage18_11001 : BOOLEAN;
    signal trunc_ln100_fu_1253_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln100_reg_2415 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln100_fu_1263_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln130_fu_1283_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln130_reg_2429 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln143_fu_1296_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln143_reg_2464 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln145_fu_1301_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln145_reg_2469 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln103_fu_1318_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln103_reg_2474 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_830_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln105_fu_1329_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln108_fu_1335_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln108_reg_2489 : STD_LOGIC_VECTOR (0 downto 0);
    signal invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_1_load_2_reg_2494 : STD_LOGIC_VECTOR (31 downto 0);
    signal invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_load_2_reg_2499 : STD_LOGIC_VECTOR (31 downto 0);
    signal last_b_load_reg_2504 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln76_fu_1357_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln76_reg_2510 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln76_1_fu_1361_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln76_1_reg_2516 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal or_ln113_fu_1418_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln115_fu_1430_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln119_fu_1436_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln119_reg_2538 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln124_fu_1441_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln124_reg_2543 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln129_fu_1447_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln129_reg_2548 : STD_LOGIC_VECTOR (0 downto 0);
    signal last_r_load_reg_2553 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln74_fu_1460_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln74_reg_2565 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln74_1_fu_1464_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln74_1_reg_2571 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln75_fu_1469_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln75_reg_2576 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln75_1_fu_1473_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln75_1_reg_2582 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln124_fu_1523_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln126_fu_1535_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln129_fu_1555_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln129_reg_2603 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln131_fu_1571_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln135_fu_1578_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln135_reg_2617 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln135_reg_2617_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln137_fu_1612_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln137_reg_2626 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln138_fu_1642_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln138_reg_2636 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_819_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_reg_2646 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul2_reg_2651 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul1_reg_2656 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1598_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sdiv_ln136_reg_2661 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_pp0_stage14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage14 : signal is "none";
    signal ap_block_state15_pp0_stage14_iter0 : BOOLEAN;
    signal ap_block_state35_pp0_stage14_iter1 : BOOLEAN;
    signal ap_block_pp0_stage14_11001 : BOOLEAN;
    signal trunc_ln371_fu_1707_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln371_reg_2666 : STD_LOGIC_VECTOR (22 downto 0);
    signal ap_CS_fsm_pp0_stage15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage15 : signal is "none";
    signal ap_block_state16_pp0_stage15_iter0 : BOOLEAN;
    signal ap_block_state36_pp0_stage15_iter1 : BOOLEAN;
    signal ap_block_pp0_stage15_11001 : BOOLEAN;
    signal add_ln346_1_fu_1715_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln346_1_reg_2671 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_reg_2676 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln71_1_fu_1729_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln71_1_reg_2682 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln136_fu_1735_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1629_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sdiv_ln137_reg_2692 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_1_reg_2697 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_reg_2702 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_815_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub2_reg_2707 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln137_fu_1799_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1653_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sdiv_ln138_reg_2717 : STD_LOGIC_VECTOR (8 downto 0);
    signal val_fu_1806_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal val_reg_2722 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln371_1_fu_1861_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln371_1_reg_2727 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln346_2_fu_1869_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln346_2_reg_2732 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_3_reg_2737 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln71_2_fu_1883_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln71_2_reg_2743 : STD_LOGIC_VECTOR (7 downto 0);
    signal xs_exp_2_reg_2748 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln371_2_fu_1937_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln371_2_reg_2754 : STD_LOGIC_VECTOR (22 downto 0);
    signal sext_ln138_fu_1941_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_reg_2764 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_2769 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_fu_2014_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_reg_2774 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln71_5_fu_2031_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln71_5_reg_2779 : STD_LOGIC_VECTOR (8 downto 0);
    signal val_1_fu_2042_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal val_1_reg_2784 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_9_reg_2789 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_reg_2794 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln80_fu_2115_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage19_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_phi_reg_pp0_iter0_empty_19_reg_420 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln89_fu_1077_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_state6_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_state26_pp0_stage5_iter1 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal ap_phi_mux_stop_loc_1_phi_fu_433_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_stop_loc_1_reg_430 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_threshold_loc_1_reg_443 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_stop_flag_1_reg_455 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_stop_flag_1_reg_455 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_stop_flag_2_phi_fu_476_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_stop_flag_2_reg_472 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_stop_flag_2_reg_472 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_stop_new_2_phi_fu_487_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_stop_new_2_reg_484 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_stop_new_2_reg_484 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_empty_20_phi_fu_497_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_empty_20_reg_494 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_empty_20_reg_494 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_stop_flag_3_phi_fu_507_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_stop_flag_3_reg_504 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln108_fu_1379_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_stop_new_3_phi_fu_519_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_stop_new_3_reg_516 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln110_fu_1390_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_empty_21_phi_fu_530_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_empty_21_reg_527 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_stop_flag_4_reg_538 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_stop_flag_4_reg_538 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_stop_new_4_reg_550 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_stop_new_4_reg_550 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_empty_22_reg_560 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_empty_22_reg_560 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_stop_flag_5_phi_fu_573_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_stop_flag_5_reg_570 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln119_fu_1491_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_stop_new_5_phi_fu_585_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_stop_new_5_reg_582 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln121_fu_1502_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_empty_23_phi_fu_596_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_empty_23_reg_593 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_empty_24_phi_fu_606_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_empty_24_reg_603 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_first_b_loc_0_reg_614 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_first_b_loc_0_reg_614 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_last_b_loc_0_reg_623 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_last_b_loc_0_reg_623 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_first_g_loc_0_reg_632 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_first_g_loc_0_reg_632 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_last_g_loc_0_reg_642 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_last_g_loc_0_reg_642 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_first_r_loc_0_reg_652 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_first_r_loc_0_reg_652 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_stop_flag_6_reg_661 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_stop_flag_6_reg_661 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_stop_new_6_reg_674 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_stop_new_6_reg_674 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_first_r_loc_1_phi_fu_688_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_first_r_loc_1_reg_685 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_first_r_loc_1_reg_685 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_last_r_loc_0_phi_fu_701_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_last_r_loc_0_reg_698 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_last_r_loc_0_reg_698 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_first_b_loc_1_phi_fu_712_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_first_b_loc_1_reg_709 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_first_b_loc_1_reg_709 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_last_b_loc_1_phi_fu_725_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_last_b_loc_1_reg_722 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_last_b_loc_1_reg_722 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_empty_25_phi_fu_738_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_empty_25_reg_735 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_empty_25_reg_735 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_first_g_loc_1_reg_748 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_first_g_loc_1_reg_748 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_last_g_loc_1_reg_761 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_last_g_loc_1_reg_761 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_stop_flag_7_phi_fu_778_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_stop_flag_7_reg_774 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_stop_flag_7_reg_774 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_stop_new_7_reg_789 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_stop_new_7_reg_789 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_p_data_2_reg_803 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_p_data_2_reg_803 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_p_data_2_reg_803 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln68_fu_920_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln69_fu_925_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln70_fu_930_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln89_fu_1055_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal zext_ln103_fu_1268_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage18 : BOOLEAN;
    signal zext_ln108_1_fu_1289_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln144_fu_1341_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage19 : BOOLEAN;
    signal zext_ln145_fu_1347_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln160_fu_958_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln160_fu_952_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln160_1_fu_1028_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_block_pp0_stage17 : BOOLEAN;
    signal ap_block_pp0_stage1_01001 : BOOLEAN;
    signal add_ln68_fu_991_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln69_fu_998_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln70_fu_1005_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_815_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_815_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal ap_block_pp0_stage8 : BOOLEAN;
    signal ap_block_pp0_stage9 : BOOLEAN;
    signal grp_fu_819_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_819_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage12 : BOOLEAN;
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal grp_fu_827_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage15 : BOOLEAN;
    signal ap_block_pp0_stage16 : BOOLEAN;
    signal select_ln58_1_fu_906_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln163_fu_946_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln166_fu_1022_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_fu_1098_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mantissa_3_fu_1124_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal zext_ln346_3_fu_1137_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln346_fu_1140_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln71_fu_1154_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln71_6_fu_1159_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln71_fu_1163_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln71_7_fu_1171_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln68_4_fu_1133_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal zext_ln71_3_fu_1175_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal lshr_ln71_fu_1179_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal shl_ln71_fu_1185_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_12_fu_1217_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln74_5_fu_1238_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln100_1_fu_1257_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln108_fu_1274_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln108_fu_1279_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln103_fu_1306_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln103_fu_1312_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln108_fu_1366_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_fu_1371_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln113_fu_1398_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln113_fu_1404_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_fu_1410_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln119_fu_1478_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_fu_1483_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln124_fu_1510_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_1515_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln129_fu_1542_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_fu_1547_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln136_fu_1584_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln136_1_fu_1588_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1598_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln137_fu_1604_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln137_1_fu_1608_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln138_fu_1634_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln138_1_fu_1638_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal xor_ln74_fu_1658_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln317_fu_1668_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln74_fu_1663_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln317_fu_1684_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln317_fu_1676_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln317_fu_1672_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal data_1_fu_1689_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal xs_exp_fu_1697_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln346_fu_1711_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal mantissa_fu_1739_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln71_fu_1752_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln71_1_fu_1755_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln71_1_fu_1761_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln68_1_fu_1748_p1 : STD_LOGIC_VECTOR (54 downto 0);
    signal zext_ln71_fu_1765_p1 : STD_LOGIC_VECTOR (54 downto 0);
    signal lshr_ln71_1_fu_1769_p2 : STD_LOGIC_VECTOR (54 downto 0);
    signal shl_ln71_1_fu_1775_p2 : STD_LOGIC_VECTOR (54 downto 0);
    signal zext_ln74_2_fu_1803_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln75_fu_1812_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln317_1_fu_1822_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln75_fu_1817_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln317_1_fu_1838_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln317_2_fu_1830_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln317_1_fu_1826_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal data_2_fu_1843_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal xs_exp_1_fu_1851_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln346_1_fu_1865_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal xor_ln76_fu_1889_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln317_2_fu_1899_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln76_fu_1894_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln317_2_fu_1914_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln317_4_fu_1906_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln317_2_fu_1902_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal data_3_fu_1919_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal mantissa_1_fu_1945_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln71_2_fu_1958_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln71_3_fu_1961_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln71_3_fu_1967_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln68_2_fu_1954_p1 : STD_LOGIC_VECTOR (54 downto 0);
    signal zext_ln71_1_fu_1971_p1 : STD_LOGIC_VECTOR (54 downto 0);
    signal lshr_ln71_2_fu_1975_p2 : STD_LOGIC_VECTOR (54 downto 0);
    signal shl_ln71_2_fu_1981_p2 : STD_LOGIC_VECTOR (54 downto 0);
    signal zext_ln346_2_fu_2005_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln346_3_fu_2008_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln71_3_fu_2022_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln71_4_fu_2027_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln74_3_fu_2039_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mantissa_2_fu_2048_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln71_5_fu_2061_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln68_3_fu_2057_p1 : STD_LOGIC_VECTOR (54 downto 0);
    signal zext_ln71_2_fu_2064_p1 : STD_LOGIC_VECTOR (54 downto 0);
    signal lshr_ln71_3_fu_2068_p2 : STD_LOGIC_VECTOR (54 downto 0);
    signal shl_ln71_3_fu_2074_p2 : STD_LOGIC_VECTOR (54 downto 0);
    signal zext_ln74_4_fu_2098_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal val_2_fu_2101_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal d_fu_2107_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_815_ce : STD_LOGIC;
    signal ap_block_state14_pp0_stage13_iter0 : BOOLEAN;
    signal ap_block_state34_pp0_stage13_iter1 : BOOLEAN;
    signal ap_block_pp0_stage13_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage13 : signal is "none";
    signal grp_fu_819_ce : STD_LOGIC;
    signal grp_fu_823_ce : STD_LOGIC;
    signal grp_fu_827_ce : STD_LOGIC;
    signal grp_fu_1598_ce : STD_LOGIC;
    signal grp_fu_1629_ce : STD_LOGIC;
    signal grp_fu_1653_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_block_pp0_stage8_subdone : BOOLEAN;
    signal ap_block_pp0_stage9_subdone : BOOLEAN;
    signal ap_block_pp0_stage10_subdone : BOOLEAN;
    signal ap_block_pp0_stage11_subdone : BOOLEAN;
    signal ap_block_pp0_stage12_subdone : BOOLEAN;
    signal ap_block_pp0_stage13_subdone : BOOLEAN;
    signal ap_block_pp0_stage14_subdone : BOOLEAN;
    signal ap_block_pp0_stage15_subdone : BOOLEAN;
    signal ap_block_pp0_stage16_subdone : BOOLEAN;
    signal ap_block_pp0_stage17_subdone : BOOLEAN;
    signal ap_block_pp0_stage18_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal regslice_both_src_V_data_V_U_apdone_blk : STD_LOGIC;
    signal src_TDATA_int_regslice : STD_LOGIC_VECTOR (31 downto 0);
    signal src_TVALID_int_regslice : STD_LOGIC;
    signal src_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_src_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_src_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal src_TKEEP_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_src_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_src_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_src_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal src_TSTRB_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_src_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_src_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_src_V_user_V_U_apdone_blk : STD_LOGIC;
    signal src_TUSER_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_src_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_src_V_user_V_U_ack_in : STD_LOGIC;
    signal regslice_both_src_V_last_V_U_apdone_blk : STD_LOGIC;
    signal src_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_src_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_src_V_last_V_U_ack_in : STD_LOGIC;
    signal regslice_both_src_V_id_V_U_apdone_blk : STD_LOGIC;
    signal src_TID_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_src_V_id_V_U_vld_out : STD_LOGIC;
    signal regslice_both_src_V_id_V_U_ack_in : STD_LOGIC;
    signal regslice_both_src_V_dest_V_U_apdone_blk : STD_LOGIC;
    signal src_TDEST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_src_V_dest_V_U_vld_out : STD_LOGIC;
    signal regslice_both_src_V_dest_V_U_ack_in : STD_LOGIC;
    signal dst_TVALID_int_regslice : STD_LOGIC;
    signal dst_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_dst_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_dst_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_dst_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_dst_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_dst_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_dst_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_dst_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_dst_V_user_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_dst_V_user_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_dst_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_dst_V_last_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_dst_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_dst_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_dst_V_id_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_dst_V_id_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_dst_V_id_V_U_vld_out : STD_LOGIC;
    signal regslice_both_dst_V_dest_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_dst_V_dest_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_dst_V_dest_V_U_vld_out : STD_LOGIC;
    signal ap_condition_274 : BOOLEAN;
    signal ap_condition_623 : BOOLEAN;
    signal ap_condition_250 : BOOLEAN;
    signal ap_condition_943 : BOOLEAN;
    signal ap_condition_679 : BOOLEAN;
    signal ap_condition_674 : BOOLEAN;
    signal ap_condition_351 : BOOLEAN;
    signal ap_condition_618 : BOOLEAN;
    signal ap_condition_507 : BOOLEAN;
    signal ap_condition_877 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component invstripe_fsub_32ns_32ns_32_9_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component invstripe_fmul_32ns_32ns_32_5_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component invstripe_uitofp_32ns_32_7_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component invstripe_sitofp_32ns_32_7_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component invstripe_sdiv_9ns_9ns_9_13_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (8 downto 0) );
    end component;


    component invstripe_invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component invstripe_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_U : component invstripe_invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_address0,
        ce0 => invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_ce0,
        we0 => invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_we0,
        d0 => invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_d0,
        q0 => invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_q0,
        address1 => invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_address1,
        ce1 => invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_ce1,
        we1 => invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_we1,
        d1 => ap_const_lv32_0,
        q1 => invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_q1);

    invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_1_U : component invstripe_invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_1_address0,
        ce0 => invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_1_ce0,
        we0 => invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_1_we0,
        d0 => invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_1_d0,
        q0 => invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_1_q0,
        address1 => invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_1_address1,
        ce1 => invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_1_ce1,
        we1 => invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_1_we1,
        d1 => ap_const_lv32_0,
        q1 => invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_1_q1);

    invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_2_U : component invstripe_invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_2_address0,
        ce0 => invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_2_ce0,
        we0 => invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_2_we0,
        d0 => invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_2_d0,
        q0 => invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_2_q0,
        address1 => invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_2_address1,
        ce1 => invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_2_ce1,
        we1 => invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_2_we1,
        d1 => ap_const_lv32_0,
        q1 => invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_2_q1);

    fsub_32ns_32ns_32_9_full_dsp_1_U1 : component invstripe_fsub_32ns_32ns_32_9_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 9,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_815_p0,
        din1 => grp_fu_815_p1,
        ce => grp_fu_815_ce,
        dout => grp_fu_815_p2);

    fmul_32ns_32ns_32_5_max_dsp_1_U2 : component invstripe_fmul_32ns_32ns_32_5_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_819_p0,
        din1 => grp_fu_819_p1,
        ce => grp_fu_819_ce,
        dout => grp_fu_819_p2);

    uitofp_32ns_32_7_no_dsp_1_U3 : component invstripe_uitofp_32ns_32_7_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => ap_phi_reg_pp0_iter0_empty_19_reg_420,
        ce => grp_fu_823_ce,
        dout => grp_fu_823_p1);

    sitofp_32ns_32_7_no_dsp_1_U4 : component invstripe_sitofp_32ns_32_7_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_827_p0,
        ce => grp_fu_827_ce,
        dout => grp_fu_827_p1);

    sdiv_9ns_9ns_9_13_1_U5 : component invstripe_sdiv_9ns_9ns_9_13_1
    generic map (
        ID => 1,
        NUM_STAGE => 13,
        din0_WIDTH => 9,
        din1_WIDTH => 9,
        dout_WIDTH => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => ap_const_lv9_FF,
        din1 => grp_fu_1598_p1,
        ce => grp_fu_1598_ce,
        dout => grp_fu_1598_p2);

    sdiv_9ns_9ns_9_13_1_U6 : component invstripe_sdiv_9ns_9ns_9_13_1
    generic map (
        ID => 1,
        NUM_STAGE => 13,
        din0_WIDTH => 9,
        din1_WIDTH => 9,
        dout_WIDTH => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => ap_const_lv9_FF,
        din1 => sub_ln137_reg_2626,
        ce => grp_fu_1629_ce,
        dout => grp_fu_1629_p2);

    sdiv_9ns_9ns_9_13_1_U7 : component invstripe_sdiv_9ns_9ns_9_13_1
    generic map (
        ID => 1,
        NUM_STAGE => 13,
        din0_WIDTH => 9,
        din1_WIDTH => 9,
        dout_WIDTH => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => ap_const_lv9_FF,
        din1 => sub_ln138_reg_2636,
        ce => grp_fu_1653_ce,
        dout => grp_fu_1653_p2);

    regslice_both_src_V_data_V_U : component invstripe_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => src_TDATA,
        vld_in => src_TVALID,
        ack_in => regslice_both_src_V_data_V_U_ack_in,
        data_out => src_TDATA_int_regslice,
        vld_out => src_TVALID_int_regslice,
        ack_out => src_TREADY_int_regslice,
        apdone_blk => regslice_both_src_V_data_V_U_apdone_blk);

    regslice_both_src_V_keep_V_U : component invstripe_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => src_TKEEP,
        vld_in => src_TVALID,
        ack_in => regslice_both_src_V_keep_V_U_ack_in,
        data_out => src_TKEEP_int_regslice,
        vld_out => regslice_both_src_V_keep_V_U_vld_out,
        ack_out => src_TREADY_int_regslice,
        apdone_blk => regslice_both_src_V_keep_V_U_apdone_blk);

    regslice_both_src_V_strb_V_U : component invstripe_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => src_TSTRB,
        vld_in => src_TVALID,
        ack_in => regslice_both_src_V_strb_V_U_ack_in,
        data_out => src_TSTRB_int_regslice,
        vld_out => regslice_both_src_V_strb_V_U_vld_out,
        ack_out => src_TREADY_int_regslice,
        apdone_blk => regslice_both_src_V_strb_V_U_apdone_blk);

    regslice_both_src_V_user_V_U : component invstripe_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => src_TUSER,
        vld_in => src_TVALID,
        ack_in => regslice_both_src_V_user_V_U_ack_in,
        data_out => src_TUSER_int_regslice,
        vld_out => regslice_both_src_V_user_V_U_vld_out,
        ack_out => src_TREADY_int_regslice,
        apdone_blk => regslice_both_src_V_user_V_U_apdone_blk);

    regslice_both_src_V_last_V_U : component invstripe_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => src_TLAST,
        vld_in => src_TVALID,
        ack_in => regslice_both_src_V_last_V_U_ack_in,
        data_out => src_TLAST_int_regslice,
        vld_out => regslice_both_src_V_last_V_U_vld_out,
        ack_out => src_TREADY_int_regslice,
        apdone_blk => regslice_both_src_V_last_V_U_apdone_blk);

    regslice_both_src_V_id_V_U : component invstripe_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => src_TID,
        vld_in => src_TVALID,
        ack_in => regslice_both_src_V_id_V_U_ack_in,
        data_out => src_TID_int_regslice,
        vld_out => regslice_both_src_V_id_V_U_vld_out,
        ack_out => src_TREADY_int_regslice,
        apdone_blk => regslice_both_src_V_id_V_U_apdone_blk);

    regslice_both_src_V_dest_V_U : component invstripe_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => src_TDEST,
        vld_in => src_TVALID,
        ack_in => regslice_both_src_V_dest_V_U_ack_in,
        data_out => src_TDEST_int_regslice,
        vld_out => regslice_both_src_V_dest_V_U_vld_out,
        ack_out => src_TREADY_int_regslice,
        apdone_blk => regslice_both_src_V_dest_V_U_apdone_blk);

    regslice_both_dst_V_data_V_U : component invstripe_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_phi_reg_pp0_iter2_p_data_2_reg_803,
        vld_in => dst_TVALID_int_regslice,
        ack_in => dst_TREADY_int_regslice,
        data_out => dst_TDATA,
        vld_out => regslice_both_dst_V_data_V_U_vld_out,
        ack_out => dst_TREADY,
        apdone_blk => regslice_both_dst_V_data_V_U_apdone_blk);

    regslice_both_dst_V_keep_V_U : component invstripe_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => p_keep_reg_2147_pp0_iter2_reg,
        vld_in => dst_TVALID_int_regslice,
        ack_in => regslice_both_dst_V_keep_V_U_ack_in_dummy,
        data_out => dst_TKEEP,
        vld_out => regslice_both_dst_V_keep_V_U_vld_out,
        ack_out => dst_TREADY,
        apdone_blk => regslice_both_dst_V_keep_V_U_apdone_blk);

    regslice_both_dst_V_strb_V_U : component invstripe_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => p_strb_reg_2152_pp0_iter2_reg,
        vld_in => dst_TVALID_int_regslice,
        ack_in => regslice_both_dst_V_strb_V_U_ack_in_dummy,
        data_out => dst_TSTRB,
        vld_out => regslice_both_dst_V_strb_V_U_vld_out,
        ack_out => dst_TREADY,
        apdone_blk => regslice_both_dst_V_strb_V_U_apdone_blk);

    regslice_both_dst_V_user_V_U : component invstripe_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => p_user_reg_2157_pp0_iter2_reg,
        vld_in => dst_TVALID_int_regslice,
        ack_in => regslice_both_dst_V_user_V_U_ack_in_dummy,
        data_out => dst_TUSER,
        vld_out => regslice_both_dst_V_user_V_U_vld_out,
        ack_out => dst_TREADY,
        apdone_blk => regslice_both_dst_V_user_V_U_apdone_blk);

    regslice_both_dst_V_last_V_U : component invstripe_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => p_last_reg_2163_pp0_iter2_reg,
        vld_in => dst_TVALID_int_regslice,
        ack_in => regslice_both_dst_V_last_V_U_ack_in_dummy,
        data_out => dst_TLAST,
        vld_out => regslice_both_dst_V_last_V_U_vld_out,
        ack_out => dst_TREADY,
        apdone_blk => regslice_both_dst_V_last_V_U_apdone_blk);

    regslice_both_dst_V_id_V_U : component invstripe_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => p_id_reg_2169_pp0_iter2_reg,
        vld_in => dst_TVALID_int_regslice,
        ack_in => regslice_both_dst_V_id_V_U_ack_in_dummy,
        data_out => dst_TID,
        vld_out => regslice_both_dst_V_id_V_U_vld_out,
        ack_out => dst_TREADY,
        apdone_blk => regslice_both_dst_V_id_V_U_apdone_blk);

    regslice_both_dst_V_dest_V_U : component invstripe_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => p_dest_reg_2174_pp0_iter2_reg,
        vld_in => dst_TVALID_int_regslice,
        ack_in => regslice_both_dst_V_dest_V_U_ack_in_dummy,
        data_out => dst_TDEST,
        vld_out => regslice_both_dst_V_dest_V_U_vld_out,
        ack_out => dst_TREADY,
        apdone_blk => regslice_both_dst_V_dest_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_subdone))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_subdone))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    f_ap_vld_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                f_ap_vld_preg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_const_logic_1))) then 
                    f_ap_vld_preg <= ap_const_logic_0;
                elsif ((f_ap_vld = ap_const_logic_1)) then 
                    f_ap_vld_preg <= f_ap_vld;
                end if; 
            end if;
        end if;
    end process;


    f_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                f_preg <= ap_const_lv32_0;
            else
                if ((f_ap_vld = ap_const_logic_1)) then 
                    f_preg <= f;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter0_empty_19_reg_420_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_274)) then
                if ((icmp_ln89_fu_1077_p2 = ap_const_lv1_0)) then 
                    ap_phi_reg_pp0_iter0_empty_19_reg_420 <= max;
                elsif ((icmp_ln89_fu_1077_p2 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter0_empty_19_reg_420 <= invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_2_q0;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter0_stop_flag_1_reg_455_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln92_reg_2282 = ap_const_lv1_1) and (icmp_ln87_reg_2273 = ap_const_lv1_1) and (icmp_ln86_reg_2223 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_const_logic_1 = ap_const_logic_1))) then 
                ap_phi_reg_pp0_iter0_stop_flag_1_reg_455 <= ap_const_lv1_1;
            elsif ((((icmp_ln92_reg_2282 = ap_const_lv1_0) and (icmp_ln87_reg_2273 = ap_const_lv1_1) and (icmp_ln86_reg_2223 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (ap_const_logic_1 = ap_const_logic_1)) or ((icmp_ln87_reg_2273 = ap_const_lv1_0) and (icmp_ln86_reg_2223 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (ap_const_logic_1 = ap_const_logic_1)))) then 
                ap_phi_reg_pp0_iter0_stop_flag_1_reg_455 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter0_threshold_loc_1_reg_443_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln92_reg_2282 = ap_const_lv1_1) and (icmp_ln87_reg_2273 = ap_const_lv1_1) and (icmp_ln86_reg_2223 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_const_logic_1 = ap_const_logic_1))) then 
                ap_phi_reg_pp0_iter0_threshold_loc_1_reg_443 <= val_3_fu_1241_p3;
            elsif ((((icmp_ln92_reg_2282 = ap_const_lv1_0) and (icmp_ln87_reg_2273 = ap_const_lv1_1) and (icmp_ln86_reg_2223 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (ap_const_logic_1 = ap_const_logic_1)) or ((icmp_ln87_reg_2273 = ap_const_lv1_0) and (icmp_ln86_reg_2223 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (ap_const_logic_1 = ap_const_logic_1)))) then 
                ap_phi_reg_pp0_iter0_threshold_loc_1_reg_443 <= threshold;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_empty_20_reg_494_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_250)) then
                if ((ap_const_boolean_1 = ap_condition_623)) then 
                    ap_phi_reg_pp0_iter1_empty_20_reg_494 <= or_ln105_fu_1329_p2;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_empty_20_reg_494 <= ap_phi_reg_pp0_iter0_empty_20_reg_494;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_empty_22_reg_560_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln113_fu_1418_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln86_reg_2223 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln100_reg_2420) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                ap_phi_reg_pp0_iter1_empty_22_reg_560 <= or_ln115_fu_1430_p2;
            elsif (((or_ln113_fu_1418_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln86_reg_2223 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln100_reg_2420) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                ap_phi_reg_pp0_iter1_empty_22_reg_560 <= ap_phi_mux_empty_21_phi_fu_530_p4;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_const_logic_1))) then 
                ap_phi_reg_pp0_iter1_empty_22_reg_560 <= ap_phi_reg_pp0_iter0_empty_22_reg_560;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_empty_25_reg_735_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_lv1_0 = and_ln100_reg_2420) and (icmp_ln86_reg_2223_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                ap_phi_reg_pp0_iter1_empty_25_reg_735 <= stop_loc_1_reg_430;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_const_logic_1))) then 
                ap_phi_reg_pp0_iter1_empty_25_reg_735 <= ap_phi_reg_pp0_iter0_empty_25_reg_735;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_first_b_loc_0_reg_614_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln103_fu_1318_p2 = ap_const_lv1_0) and (icmp_ln86_reg_2223 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln100_reg_2420) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_const_logic_1))) then 
                ap_phi_reg_pp0_iter1_first_b_loc_0_reg_614 <= grp_fu_830_p2;
            elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (or_ln103_reg_2474 = ap_const_lv1_1) and (icmp_ln86_reg_2223 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln100_reg_2420) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                ap_phi_reg_pp0_iter1_first_b_loc_0_reg_614 <= first_b_load_reg_2261;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_const_logic_1))) then 
                ap_phi_reg_pp0_iter1_first_b_loc_0_reg_614 <= ap_phi_reg_pp0_iter0_first_b_loc_0_reg_614;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_first_b_loc_1_reg_709_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_lv1_0 = and_ln100_reg_2420) and (icmp_ln86_reg_2223_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                ap_phi_reg_pp0_iter1_first_b_loc_1_reg_709 <= first_b_load_reg_2261;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_const_logic_1))) then 
                ap_phi_reg_pp0_iter1_first_b_loc_1_reg_709 <= ap_phi_reg_pp0_iter0_first_b_loc_1_reg_709;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_first_g_loc_0_reg_632_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln113_fu_1418_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln86_reg_2223 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln100_reg_2420) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                ap_phi_reg_pp0_iter1_first_g_loc_0_reg_632 <= grp_fu_830_p2;
            elsif (((or_ln113_fu_1418_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln86_reg_2223 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln100_reg_2420) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                ap_phi_reg_pp0_iter1_first_g_loc_0_reg_632 <= first_g_load_reg_2286;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_const_logic_1))) then 
                ap_phi_reg_pp0_iter1_first_g_loc_0_reg_632 <= ap_phi_reg_pp0_iter0_first_g_loc_0_reg_632;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_first_g_loc_1_reg_748_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_lv1_0 = and_ln100_reg_2420) and (icmp_ln86_reg_2223_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                ap_phi_reg_pp0_iter1_first_g_loc_1_reg_748 <= first_g_load_reg_2286;
            elsif ((((or_ln129_reg_2603 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln86_reg_2223_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln100_reg_2420) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((or_ln129_reg_2603 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln86_reg_2223_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln100_reg_2420) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then 
                ap_phi_reg_pp0_iter1_first_g_loc_1_reg_748 <= ap_phi_reg_pp0_iter1_first_g_loc_0_reg_632;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_const_logic_1))) then 
                ap_phi_reg_pp0_iter1_first_g_loc_1_reg_748 <= ap_phi_reg_pp0_iter0_first_g_loc_1_reg_748;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_first_r_loc_0_reg_652_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln124_fu_1523_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln86_reg_2223_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln100_reg_2420) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                ap_phi_reg_pp0_iter1_first_r_loc_0_reg_652 <= grp_fu_830_p2;
            elsif (((or_ln124_fu_1523_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln86_reg_2223_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln100_reg_2420) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                ap_phi_reg_pp0_iter1_first_r_loc_0_reg_652 <= first_r_load_reg_2306;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_const_logic_1))) then 
                ap_phi_reg_pp0_iter1_first_r_loc_0_reg_652 <= ap_phi_reg_pp0_iter0_first_r_loc_0_reg_652;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_first_r_loc_1_reg_685_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_lv1_0 = and_ln100_reg_2420) and (icmp_ln86_reg_2223_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                ap_phi_reg_pp0_iter1_first_r_loc_1_reg_685 <= first_r_load_reg_2306;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_const_logic_1))) then 
                ap_phi_reg_pp0_iter1_first_r_loc_1_reg_685 <= ap_phi_reg_pp0_iter0_first_r_loc_1_reg_685;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_last_b_loc_0_reg_623_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln108_fu_1379_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln86_reg_2223 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln100_reg_2420) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                ap_phi_reg_pp0_iter1_last_b_loc_0_reg_623 <= xor_ln130_reg_2429;
            elsif (((or_ln108_fu_1379_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln86_reg_2223 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln100_reg_2420) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                ap_phi_reg_pp0_iter1_last_b_loc_0_reg_623 <= last_b;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_const_logic_1))) then 
                ap_phi_reg_pp0_iter1_last_b_loc_0_reg_623 <= ap_phi_reg_pp0_iter0_last_b_loc_0_reg_623;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_last_b_loc_1_reg_722_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_lv1_0 = and_ln100_reg_2420) and (icmp_ln86_reg_2223_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                ap_phi_reg_pp0_iter1_last_b_loc_1_reg_722 <= last_b_load_reg_2504;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_const_logic_1))) then 
                ap_phi_reg_pp0_iter1_last_b_loc_1_reg_722 <= ap_phi_reg_pp0_iter0_last_b_loc_1_reg_722;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_last_g_loc_0_reg_642_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln119_fu_1491_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln86_reg_2223_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln100_reg_2420) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                ap_phi_reg_pp0_iter1_last_g_loc_0_reg_642 <= xor_ln130_reg_2429;
            elsif (((or_ln119_fu_1491_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln86_reg_2223_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln100_reg_2420) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                ap_phi_reg_pp0_iter1_last_g_loc_0_reg_642 <= last_g;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_const_logic_1))) then 
                ap_phi_reg_pp0_iter1_last_g_loc_0_reg_642 <= ap_phi_reg_pp0_iter0_last_g_loc_0_reg_642;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_last_g_loc_1_reg_761_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_lv1_0 = and_ln100_reg_2420) and (icmp_ln86_reg_2223_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                ap_phi_reg_pp0_iter1_last_g_loc_1_reg_761 <= last_g;
            elsif ((((or_ln129_reg_2603 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln86_reg_2223_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln100_reg_2420) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((or_ln129_reg_2603 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln86_reg_2223_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln100_reg_2420) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then 
                ap_phi_reg_pp0_iter1_last_g_loc_1_reg_761 <= ap_phi_reg_pp0_iter1_last_g_loc_0_reg_642;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_const_logic_1))) then 
                ap_phi_reg_pp0_iter1_last_g_loc_1_reg_761 <= ap_phi_reg_pp0_iter0_last_g_loc_1_reg_761;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_last_r_loc_0_reg_698_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_lv1_0 = and_ln100_reg_2420) and (icmp_ln86_reg_2223_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                ap_phi_reg_pp0_iter1_last_r_loc_0_reg_698 <= last_r;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_const_logic_1))) then 
                ap_phi_reg_pp0_iter1_last_r_loc_0_reg_698 <= ap_phi_reg_pp0_iter0_last_r_loc_0_reg_698;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_stop_flag_2_reg_472_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_250)) then
                if ((ap_const_boolean_1 = ap_condition_623)) then 
                    ap_phi_reg_pp0_iter1_stop_flag_2_reg_472 <= ap_const_lv1_1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_stop_flag_2_reg_472 <= ap_phi_reg_pp0_iter0_stop_flag_2_reg_472;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_stop_flag_4_reg_538_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln113_fu_1418_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln86_reg_2223 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln100_reg_2420) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                ap_phi_reg_pp0_iter1_stop_flag_4_reg_538 <= ap_const_lv1_1;
            elsif (((or_ln113_fu_1418_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln86_reg_2223 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln100_reg_2420) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                ap_phi_reg_pp0_iter1_stop_flag_4_reg_538 <= ap_phi_mux_stop_flag_3_phi_fu_507_p4;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_const_logic_1))) then 
                ap_phi_reg_pp0_iter1_stop_flag_4_reg_538 <= ap_phi_reg_pp0_iter0_stop_flag_4_reg_538;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_stop_flag_6_reg_661_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln124_fu_1523_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln86_reg_2223_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln100_reg_2420) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                ap_phi_reg_pp0_iter1_stop_flag_6_reg_661 <= ap_const_lv1_1;
            elsif (((or_ln124_fu_1523_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln86_reg_2223_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln100_reg_2420) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                ap_phi_reg_pp0_iter1_stop_flag_6_reg_661 <= ap_phi_mux_stop_flag_5_phi_fu_573_p4;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_const_logic_1))) then 
                ap_phi_reg_pp0_iter1_stop_flag_6_reg_661 <= ap_phi_reg_pp0_iter0_stop_flag_6_reg_661;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_stop_flag_7_reg_774_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_lv1_0 = and_ln100_reg_2420) and (icmp_ln86_reg_2223_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                ap_phi_reg_pp0_iter1_stop_flag_7_reg_774 <= stop_flag_1_reg_455;
            elsif (((or_ln129_reg_2603 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln86_reg_2223_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln100_reg_2420) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then 
                ap_phi_reg_pp0_iter1_stop_flag_7_reg_774 <= ap_const_lv1_1;
            elsif (((or_ln129_reg_2603 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln86_reg_2223_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln100_reg_2420) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then 
                ap_phi_reg_pp0_iter1_stop_flag_7_reg_774 <= ap_phi_reg_pp0_iter1_stop_flag_6_reg_661;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_const_logic_1))) then 
                ap_phi_reg_pp0_iter1_stop_flag_7_reg_774 <= ap_phi_reg_pp0_iter0_stop_flag_7_reg_774;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_stop_new_2_reg_484_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_250)) then
                if ((ap_const_boolean_1 = ap_condition_623)) then 
                    ap_phi_reg_pp0_iter1_stop_new_2_reg_484 <= or_ln105_fu_1329_p2;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_stop_new_2_reg_484 <= ap_phi_reg_pp0_iter0_stop_new_2_reg_484;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_stop_new_4_reg_550_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln113_fu_1418_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln86_reg_2223 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln100_reg_2420) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                ap_phi_reg_pp0_iter1_stop_new_4_reg_550 <= or_ln115_fu_1430_p2;
            elsif (((or_ln113_fu_1418_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln86_reg_2223 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln100_reg_2420) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                ap_phi_reg_pp0_iter1_stop_new_4_reg_550 <= ap_phi_mux_stop_new_3_phi_fu_519_p4;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_const_logic_1))) then 
                ap_phi_reg_pp0_iter1_stop_new_4_reg_550 <= ap_phi_reg_pp0_iter0_stop_new_4_reg_550;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_stop_new_6_reg_674_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln124_fu_1523_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln86_reg_2223_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln100_reg_2420) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                ap_phi_reg_pp0_iter1_stop_new_6_reg_674 <= or_ln126_fu_1535_p2;
            elsif (((or_ln124_fu_1523_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln86_reg_2223_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln100_reg_2420) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                ap_phi_reg_pp0_iter1_stop_new_6_reg_674 <= ap_phi_mux_stop_new_5_phi_fu_585_p4;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_const_logic_1))) then 
                ap_phi_reg_pp0_iter1_stop_new_6_reg_674 <= ap_phi_reg_pp0_iter0_stop_new_6_reg_674;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_stop_new_7_reg_789_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_lv1_0 = and_ln100_reg_2420) and (icmp_ln86_reg_2223_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                ap_phi_reg_pp0_iter1_stop_new_7_reg_789 <= ap_const_lv8_0;
            elsif (((or_ln129_reg_2603 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln86_reg_2223_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln100_reg_2420) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then 
                ap_phi_reg_pp0_iter1_stop_new_7_reg_789 <= or_ln131_fu_1571_p2;
            elsif (((or_ln129_reg_2603 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln86_reg_2223_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln100_reg_2420) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then 
                ap_phi_reg_pp0_iter1_stop_new_7_reg_789 <= ap_phi_reg_pp0_iter1_stop_new_6_reg_674;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_const_logic_1))) then 
                ap_phi_reg_pp0_iter1_stop_new_7_reg_789 <= ap_phi_reg_pp0_iter0_stop_new_7_reg_789;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter2_p_data_2_reg_803_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln65_reg_2199_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                ap_phi_reg_pp0_iter2_p_data_2_reg_803 <= zext_ln80_fu_2115_p1;
            elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001))) then 
                ap_phi_reg_pp0_iter2_p_data_2_reg_803 <= ap_phi_reg_pp0_iter1_p_data_2_reg_803;
            end if; 
        end if;
    end process;

    empty_24_reg_603_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_674)) then
                if ((ap_const_boolean_1 = ap_condition_679)) then 
                    empty_24_reg_603 <= or_ln126_fu_1535_p2;
                elsif ((ap_const_boolean_1 = ap_condition_943)) then 
                    empty_24_reg_603 <= ap_phi_mux_empty_23_phi_fu_596_p4;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    empty_24_reg_603 <= ap_phi_reg_pp0_iter1_empty_24_reg_603;
                end if;
            end if; 
        end if;
    end process;

    reg_835_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_const_logic_1)) then
                if ((ap_const_boolean_1 = ap_condition_618)) then 
                    reg_835 <= invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_q1;
                elsif ((ap_const_boolean_1 = ap_condition_351)) then 
                    reg_835 <= invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_q0;
                end if;
            end if; 
        end if;
    end process;

    reg_840_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_const_logic_1)) then
                if ((ap_const_boolean_1 = ap_condition_618)) then 
                    reg_840 <= invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_1_q1;
                elsif ((ap_const_boolean_1 = ap_condition_351)) then 
                    reg_840 <= invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_1_q0;
                end if;
            end if; 
        end if;
    end process;

    stop_loc_1_reg_430_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_877)) then
                if ((ap_const_boolean_1 = ap_condition_507)) then 
                    stop_loc_1_reg_430 <= ap_const_lv8_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    stop_loc_1_reg_430 <= ap_phi_reg_pp0_iter0_stop_loc_1_reg_430;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln86_reg_2223 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001))) then
                add_ln100_reg_2396 <= add_ln100_fu_1212_p2;
                icmp_ln100_reg_2401 <= icmp_ln100_fu_1227_p2;
                icmp_ln142_reg_2406 <= icmp_ln142_fu_1233_p2;
                trunc_ln100_1_reg_2391 <= trunc_ln100_1_fu_1209_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln142_reg_2406 = ap_const_lv1_1) and (icmp_ln86_reg_2223 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001))) then
                add_ln143_reg_2464 <= add_ln143_fu_1296_p2;
                sub_ln145_reg_2469 <= sub_ln145_fu_1301_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln65_reg_2199_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001))) then
                add_ln346_1_reg_2671 <= add_ln346_1_fu_1715_p2;
                sub_ln71_1_reg_2682 <= sub_ln71_1_fu_1729_p2;
                tmp_reg_2676 <= add_ln346_1_fu_1715_p2(8 downto 8);
                trunc_ln371_reg_2666 <= trunc_ln371_fu_1707_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln65_reg_2199_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001))) then
                add_ln346_2_reg_2732 <= add_ln346_2_fu_1869_p2;
                sub_ln71_2_reg_2743 <= sub_ln71_2_fu_1883_p2;
                tmp_3_reg_2737 <= add_ln346_2_fu_1869_p2(8 downto 8);
                trunc_ln371_1_reg_2727 <= trunc_ln371_1_fu_1861_p1;
                trunc_ln371_2_reg_2754 <= trunc_ln371_2_fu_1937_p1;
                val_reg_2722 <= val_fu_1806_p3;
                xs_exp_2_reg_2748 <= data_3_fu_1919_p3(30 downto 23);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln86_reg_2223 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                add_ln87_reg_2254 <= add_ln87_fu_1016_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln86_reg_2223 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001))) then
                and_ln100_reg_2420 <= and_ln100_fu_1263_p2;
                trunc_ln100_reg_2415 <= trunc_ln100_fu_1253_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln65_fu_914_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter0_p_data_2_reg_803 <= src_TDATA_int_regslice;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln92_reg_2282 = ap_const_lv1_0) and (icmp_ln87_reg_2273 = ap_const_lv1_1) and (icmp_ln86_reg_2223 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (ap_const_logic_1 = ap_const_logic_1)) or ((icmp_ln87_reg_2273 = ap_const_lv1_0) and (icmp_ln86_reg_2223 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (ap_const_logic_1 = ap_const_logic_1)))) then
                ap_phi_reg_pp0_iter0_stop_loc_1_reg_430 <= stop;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter1_p_data_2_reg_803 <= ap_phi_reg_pp0_iter0_p_data_2_reg_803;
                ap_phi_reg_pp0_iter1_stop_flag_1_reg_455 <= ap_phi_reg_pp0_iter0_stop_flag_1_reg_455;
                threshold_loc_1_reg_443 <= ap_phi_reg_pp0_iter0_threshold_loc_1_reg_443;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                b_in_reg_2185 <= src_TDATA_int_regslice(23 downto 16);
                f_read_reg_2137 <= f_in_sig;
                g_in_reg_2192 <= src_TDATA_int_regslice(15 downto 8);
                g_in_reg_2192_pp0_iter1_reg <= g_in_reg_2192;
                icmp_ln65_reg_2199 <= icmp_ln65_fu_914_p2;
                icmp_ln65_reg_2199_pp0_iter1_reg <= icmp_ln65_reg_2199;
                icmp_ln86_reg_2223 <= icmp_ln86_fu_940_p2;
                icmp_ln86_reg_2223_pp0_iter1_reg <= icmp_ln86_reg_2223;
                icmp_ln86_reg_2223_pp0_iter2_reg <= icmp_ln86_reg_2223_pp0_iter1_reg;
                last_b_load_reg_2504 <= last_b;
                p_dest_reg_2174 <= src_TDEST_int_regslice;
                p_dest_reg_2174_pp0_iter1_reg <= p_dest_reg_2174;
                p_dest_reg_2174_pp0_iter2_reg <= p_dest_reg_2174_pp0_iter1_reg;
                p_id_reg_2169 <= src_TID_int_regslice;
                p_id_reg_2169_pp0_iter1_reg <= p_id_reg_2169;
                p_id_reg_2169_pp0_iter2_reg <= p_id_reg_2169_pp0_iter1_reg;
                p_keep_reg_2147 <= src_TKEEP_int_regslice;
                p_keep_reg_2147_pp0_iter1_reg <= p_keep_reg_2147;
                p_keep_reg_2147_pp0_iter2_reg <= p_keep_reg_2147_pp0_iter1_reg;
                p_last_reg_2163 <= src_TLAST_int_regslice;
                p_last_reg_2163_pp0_iter1_reg <= p_last_reg_2163;
                p_last_reg_2163_pp0_iter2_reg <= p_last_reg_2163_pp0_iter1_reg;
                p_strb_reg_2152 <= src_TSTRB_int_regslice;
                p_strb_reg_2152_pp0_iter1_reg <= p_strb_reg_2152;
                p_strb_reg_2152_pp0_iter2_reg <= p_strb_reg_2152_pp0_iter1_reg;
                p_user_reg_2157 <= src_TUSER_int_regslice;
                p_user_reg_2157_pp0_iter1_reg <= p_user_reg_2157;
                p_user_reg_2157_pp0_iter2_reg <= p_user_reg_2157_pp0_iter1_reg;
                r_in_reg_2179 <= r_in_fu_878_p1;
                r_in_reg_2179_pp0_iter1_reg <= r_in_reg_2179;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln65_reg_2199 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_const_logic_1 = ap_const_logic_1))) then
                conv1_reg_2348 <= grp_fu_827_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln65_reg_2199 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_const_logic_1))) then
                conv2_reg_2323 <= grp_fu_827_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln65_reg_2199 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_const_logic_1 = ap_const_logic_1))) then
                conv3_reg_2338 <= grp_fu_827_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln65_reg_2199 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_const_logic_1 = ap_const_logic_1))) then
                conv4_reg_2328 <= grp_fu_827_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln65_reg_2199 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_const_logic_1 = ap_const_logic_1))) then
                conv5_reg_2333 <= grp_fu_827_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln92_reg_2282 = ap_const_lv1_1) and (icmp_ln87_reg_2273 = ap_const_lv1_1) and (icmp_ln86_reg_2223 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001))) then
                conv6_reg_2343 <= grp_fu_823_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln65_reg_2199 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_const_logic_1))) then
                conv_reg_2313 <= grp_fu_827_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln103_fu_1318_p2 = ap_const_lv1_0) and (icmp_ln86_reg_2223 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln100_reg_2420) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_const_logic_1))) then
                first_b <= grp_fu_830_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                first_b_load_reg_2261 <= first_b;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln113_fu_1418_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln86_reg_2223 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln100_reg_2420) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                first_g <= grp_fu_830_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                first_g_load_reg_2286 <= first_g;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln124_fu_1523_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln86_reg_2223_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln100_reg_2420) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                first_r <= grp_fu_830_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001))) then
                first_r_load_reg_2306 <= first_r;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln86_reg_2223 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln100_reg_2420) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001))) then
                icmp_ln108_reg_2489 <= icmp_ln108_fu_1335_p2;
                or_ln103_reg_2474 <= or_ln103_fu_1318_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln86_reg_2223 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln100_reg_2420) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln119_reg_2538 <= icmp_ln119_fu_1436_p2;
                icmp_ln124_reg_2543 <= icmp_ln124_fu_1441_p2;
                icmp_ln129_reg_2548 <= icmp_ln129_fu_1447_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln86_reg_2223_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                icmp_ln135_reg_2617 <= icmp_ln135_fu_1578_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                icmp_ln135_reg_2617_pp0_iter2_reg <= icmp_ln135_reg_2617;
                select_ln58_reg_2235 <= select_ln58_fu_980_p3;
                trunc_ln58_reg_2242 <= trunc_ln58_fu_987_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln65_reg_2199_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                icmp_ln74_1_reg_2571 <= icmp_ln74_1_fu_1464_p2;
                icmp_ln74_reg_2565 <= icmp_ln74_fu_1460_p2;
                icmp_ln75_1_reg_2582 <= icmp_ln75_1_fu_1473_p2;
                icmp_ln75_reg_2576 <= icmp_ln75_fu_1469_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln65_reg_2199 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln76_1_reg_2516 <= icmp_ln76_1_fu_1361_p2;
                icmp_ln76_reg_2510 <= icmp_ln76_fu_1357_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln86_reg_2223 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                icmp_ln87_reg_2273 <= icmp_ln87_fu_1050_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln87_fu_1050_p2 = ap_const_lv1_1) and (icmp_ln86_reg_2223 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                icmp_ln92_reg_2282 <= icmp_ln92_fu_1059_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln65_fu_914_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_1_addr_reg_2208 <= zext_ln69_fu_925_p1(8 - 1 downto 0);
                invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_2_addr_reg_2213 <= zext_ln70_fu_930_p1(8 - 1 downto 0);
                invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_addr_reg_2203 <= zext_ln68_fu_920_p1(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln86_reg_2223 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln100_reg_2420) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_const_logic_1))) then
                invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_1_load_2_reg_2494 <= invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_1_q0;
                invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_load_2_reg_2499 <= invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln108_fu_1379_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln86_reg_2223 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln100_reg_2420) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                last_b <= xor_ln130_reg_2429;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln119_fu_1491_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln86_reg_2223_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln100_reg_2420) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                last_g <= xor_ln130_reg_2429;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln129_reg_2603 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln86_reg_2223_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln100_reg_2420) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                last_r <= xor_ln130_reg_2429;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                last_r_load_reg_2553 <= last_r;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln89_fu_1077_p2 = ap_const_lv1_1) and (icmp_ln87_reg_2273 = ap_const_lv1_1) and (icmp_ln86_reg_2223 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_const_logic_1))) then
                max <= invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_2_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln65_reg_2199_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001))) then
                mul1_reg_2656 <= grp_fu_819_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln65_reg_2199_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001))) then
                mul2_reg_2651 <= grp_fu_819_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln65_reg_2199_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001))) then
                mul_reg_2646 <= grp_fu_819_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln86_reg_2223_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln100_reg_2420) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                or_ln129_reg_2603 <= or_ln129_fu_1555_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln87_reg_2273 = ap_const_lv1_1) and (icmp_ln86_reg_2223 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_const_logic_1)) or ((icmp_ln65_reg_2199 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_const_logic_1)))) then
                reg_845 <= invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_2_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln135_reg_2617 = ap_const_lv1_1) and (icmp_ln86_reg_2223_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                scale_b <= grp_fu_827_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln135_reg_2617_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln86_reg_2223_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                scale_g <= grp_fu_827_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln135_reg_2617 = ap_const_lv1_1) and (icmp_ln86_reg_2223_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                scale_r <= grp_fu_827_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln135_reg_2617 = ap_const_lv1_1) and (icmp_ln86_reg_2223_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001))) then
                sdiv_ln136_reg_2661 <= grp_fu_1598_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln135_reg_2617 = ap_const_lv1_1) and (icmp_ln86_reg_2223_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001))) then
                sdiv_ln137_reg_2692 <= grp_fu_1629_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln135_reg_2617 = ap_const_lv1_1) and (icmp_ln86_reg_2223_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001))) then
                sdiv_ln138_reg_2717 <= grp_fu_1653_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln65_reg_2199_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001))) then
                select_ln71_5_reg_2779 <= select_ln71_5_fu_2031_p3;
                tmp_7_reg_2774 <= add_ln346_3_fu_2008_p2(8 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln86_reg_2223_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_phi_mux_stop_flag_7_phi_fu_778_p6 = ap_const_lv1_1))) then
                stop <= ap_phi_reg_pp0_iter1_stop_new_7_reg_789;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                stop_flag_1_reg_455 <= ap_phi_reg_pp0_iter1_stop_flag_1_reg_455;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln65_reg_2199_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001))) then
                sub2_reg_2707 <= grp_fu_815_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln135_fu_1578_p2 = ap_const_lv1_1) and (icmp_ln86_reg_2223_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                sub_ln137_reg_2626 <= sub_ln137_fu_1612_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln135_reg_2617 = ap_const_lv1_1) and (icmp_ln86_reg_2223_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                sub_ln138_reg_2636 <= sub_ln138_fu_1642_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln92_reg_2282 = ap_const_lv1_1) and (icmp_ln87_reg_2273 = ap_const_lv1_1) and (icmp_ln86_reg_2223 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_const_logic_1 = ap_const_logic_1))) then
                threshold <= val_3_fu_1241_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln92_reg_2282 = ap_const_lv1_1) and (icmp_ln87_reg_2273 = ap_const_lv1_1) and (icmp_ln86_reg_2223 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001))) then
                tmp_10_reg_2376 <= add_ln346_fu_1140_p2(8 downto 8);
                tmp_11_reg_2381 <= lshr_ln71_fu_1179_p2(24 downto 24);
                tmp_8_reg_2386 <= shl_ln71_fu_1185_p2(55 downto 24);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_2676 = ap_const_lv1_1) and (icmp_ln65_reg_2199_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001))) then
                tmp_1_reg_2697 <= lshr_ln71_1_fu_1769_p2(24 downto 24);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_2676 = ap_const_lv1_0) and (icmp_ln65_reg_2199_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001))) then
                tmp_2_reg_2702 <= shl_ln71_1_fu_1775_p2(31 downto 24);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_3_reg_2737 = ap_const_lv1_0) and (icmp_ln65_reg_2199_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001))) then
                tmp_4_reg_2769 <= shl_ln71_2_fu_1981_p2(31 downto 24);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_3_reg_2737 = ap_const_lv1_1) and (icmp_ln65_reg_2199_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001))) then
                tmp_5_reg_2764 <= lshr_ln71_2_fu_1975_p2(24 downto 24);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_7_reg_2774 = ap_const_lv1_0) and (icmp_ln65_reg_2199_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001))) then
                tmp_6_reg_2794 <= shl_ln71_3_fu_2074_p2(31 downto 24);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_7_reg_2774 = ap_const_lv1_1) and (icmp_ln65_reg_2199_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001))) then
                tmp_9_reg_2789 <= lshr_ln71_3_fu_2068_p2(24 downto 24);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln92_reg_2282 = ap_const_lv1_1) and (icmp_ln87_reg_2273 = ap_const_lv1_1) and (icmp_ln86_reg_2223 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001))) then
                trunc_ln371_3_reg_2359 <= trunc_ln371_3_fu_1112_p1;
                xs_exp_4_reg_2353 <= data_fu_1098_p1(30 downto 23);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln65_reg_2199_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001))) then
                val_1_reg_2784 <= val_1_fu_2042_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_const_logic_1))) then
                x <= select_ln160_1_fu_1028_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln86_reg_2223 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln100_fu_1263_p2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001))) then
                xor_ln130_reg_2429 <= xor_ln130_fu_1283_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (or_ln160_fu_952_p2 = ap_const_lv1_1))) then
                y <= select_ln160_fu_958_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage19_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage0_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_reset_idle_pp0, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone, ap_block_pp0_stage7_subdone, ap_block_pp0_stage8_subdone, ap_block_pp0_stage9_subdone, ap_block_pp0_stage10_subdone, ap_block_pp0_stage11_subdone, ap_block_pp0_stage12_subdone, ap_block_pp0_stage13_subdone, ap_block_pp0_stage14_subdone, ap_block_pp0_stage15_subdone, ap_block_pp0_stage16_subdone, ap_block_pp0_stage17_subdone, ap_block_pp0_stage18_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if (((ap_reset_idle_pp0 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                elsif (((ap_reset_idle_pp0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_pp0_stage8 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage8_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                end if;
            when ap_ST_fsm_pp0_stage9 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage9_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                end if;
            when ap_ST_fsm_pp0_stage10 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage10_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                end if;
            when ap_ST_fsm_pp0_stage11 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage11_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                end if;
            when ap_ST_fsm_pp0_stage12 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage12_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                end if;
            when ap_ST_fsm_pp0_stage13 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage13_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                end if;
            when ap_ST_fsm_pp0_stage14 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage14_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                end if;
            when ap_ST_fsm_pp0_stage15 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage15_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage16;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                end if;
            when ap_ST_fsm_pp0_stage16 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage16_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage17;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage16;
                end if;
            when ap_ST_fsm_pp0_stage17 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage17_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage18;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage17;
                end if;
            when ap_ST_fsm_pp0_stage18 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage18_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage19;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage18;
                end if;
            when ap_ST_fsm_pp0_stage19 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage19_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage19;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln100_fu_1212_p2 <= std_logic_vector(unsigned(select_ln58_reg_2235) + unsigned(ap_const_lv16_FC01));
    add_ln108_fu_1274_p2 <= std_logic_vector(unsigned(trunc_ln100_1_reg_2391) + unsigned(ap_const_lv7_1));
    add_ln143_fu_1296_p2 <= std_logic_vector(unsigned(trunc_ln58_reg_2242) + unsigned(ap_const_lv8_81));
    add_ln163_fu_946_p2 <= std_logic_vector(unsigned(select_ln58_1_fu_906_p3) + unsigned(ap_const_lv16_1));
    add_ln166_fu_1022_p2 <= std_logic_vector(unsigned(select_ln58_fu_980_p3) + unsigned(ap_const_lv16_1));
    add_ln346_1_fu_1715_p2 <= std_logic_vector(unsigned(zext_ln346_fu_1711_p1) + unsigned(ap_const_lv9_181));
    add_ln346_2_fu_1869_p2 <= std_logic_vector(unsigned(zext_ln346_1_fu_1865_p1) + unsigned(ap_const_lv9_181));
    add_ln346_3_fu_2008_p2 <= std_logic_vector(unsigned(zext_ln346_2_fu_2005_p1) + unsigned(ap_const_lv9_181));
    add_ln346_fu_1140_p2 <= std_logic_vector(unsigned(zext_ln346_3_fu_1137_p1) + unsigned(ap_const_lv9_181));
    add_ln68_fu_991_p2 <= std_logic_vector(unsigned(reg_835) + unsigned(ap_const_lv32_1));
    add_ln69_fu_998_p2 <= std_logic_vector(unsigned(reg_840) + unsigned(ap_const_lv32_1));
    add_ln70_fu_1005_p2 <= std_logic_vector(unsigned(reg_845) + unsigned(ap_const_lv32_1));
    add_ln87_fu_1016_p2 <= std_logic_vector(unsigned(select_ln58_fu_980_p3) + unsigned(ap_const_lv16_FD02));
    and_ln100_fu_1263_p2 <= (icmp_ln100_reg_2401 and icmp_ln100_1_fu_1257_p2);
    and_ln74_fu_1663_p2 <= (xor_ln74_fu_1658_p2 and icmp_ln74_1_reg_2571);
    and_ln75_fu_1817_p2 <= (xor_ln75_fu_1812_p2 and icmp_ln75_1_reg_2582);
    and_ln76_fu_1894_p2 <= (xor_ln76_fu_1889_p2 and icmp_ln76_1_reg_2516);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage10 <= ap_CS_fsm(10);
    ap_CS_fsm_pp0_stage11 <= ap_CS_fsm(11);
    ap_CS_fsm_pp0_stage12 <= ap_CS_fsm(12);
    ap_CS_fsm_pp0_stage13 <= ap_CS_fsm(13);
    ap_CS_fsm_pp0_stage14 <= ap_CS_fsm(14);
    ap_CS_fsm_pp0_stage15 <= ap_CS_fsm(15);
    ap_CS_fsm_pp0_stage16 <= ap_CS_fsm(16);
    ap_CS_fsm_pp0_stage17 <= ap_CS_fsm(17);
    ap_CS_fsm_pp0_stage18 <= ap_CS_fsm(18);
    ap_CS_fsm_pp0_stage19 <= ap_CS_fsm(19);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage8 <= ap_CS_fsm(8);
    ap_CS_fsm_pp0_stage9 <= ap_CS_fsm(9);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(f_ap_vld_in_sig, src_TVALID_int_regslice)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_const_logic_1 = ap_const_logic_1) and ((f_ap_vld_in_sig = ap_const_logic_0) or (src_TVALID_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(f_ap_vld_in_sig, src_TVALID_int_regslice)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_const_logic_1 = ap_const_logic_1) and ((f_ap_vld_in_sig = ap_const_logic_0) or (src_TVALID_int_regslice = ap_const_logic_0)));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage12_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage12_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage13_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage13_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage14_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage14_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage15_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage15_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage16_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage16_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage17_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage17_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage18_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage18_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage19_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage19_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_01001_assign_proc : process(ap_enable_reg_pp0_iter2, dst_TREADY_int_regslice)
    begin
                ap_block_pp0_stage1_01001 <= ((dst_TREADY_int_regslice = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter2, dst_TREADY_int_regslice)
    begin
                ap_block_pp0_stage1_11001 <= ((dst_TREADY_int_regslice = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter2, dst_TREADY_int_regslice)
    begin
                ap_block_pp0_stage1_subdone <= ((dst_TREADY_int_regslice = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_11001_assign_proc : process(ap_enable_reg_pp0_iter2, dst_TREADY_int_regslice)
    begin
                ap_block_pp0_stage2_11001 <= ((dst_TREADY_int_regslice = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage2_subdone_assign_proc : process(ap_enable_reg_pp0_iter2, dst_TREADY_int_regslice)
    begin
                ap_block_pp0_stage2_subdone <= ((dst_TREADY_int_regslice = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage3_11001_assign_proc : process(ap_enable_reg_pp0_iter2, regslice_both_dst_V_data_V_U_apdone_blk)
    begin
                ap_block_pp0_stage3_11001 <= ((regslice_both_dst_V_data_V_U_apdone_blk = ap_const_logic_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage3_subdone_assign_proc : process(ap_enable_reg_pp0_iter2, regslice_both_dst_V_data_V_U_apdone_blk)
    begin
                ap_block_pp0_stage3_subdone <= ((regslice_both_dst_V_data_V_U_apdone_blk = ap_const_logic_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage9_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage10_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage11_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage12_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage13_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage14_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage15_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage16_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage17_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage18_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_pp0_stage0_iter0_assign_proc : process(f_ap_vld_in_sig, src_TVALID_int_regslice)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((f_ap_vld_in_sig = ap_const_logic_0) or (src_TVALID_int_regslice = ap_const_logic_0));
    end process;

        ap_block_state20_pp0_stage19_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage5_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage6_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage7_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage8_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage9_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage10_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage11_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage12_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp0_stage13_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp0_stage14_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp0_stage15_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp0_stage16_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp0_stage17_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp0_stage18_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp0_stage19_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state42_pp0_stage1_iter2_assign_proc : process(dst_TREADY_int_regslice)
    begin
                ap_block_state42_pp0_stage1_iter2 <= (dst_TREADY_int_regslice = ap_const_logic_0);
    end process;


    ap_block_state43_pp0_stage2_iter2_assign_proc : process(dst_TREADY_int_regslice)
    begin
                ap_block_state43_pp0_stage2_iter2 <= (dst_TREADY_int_regslice = ap_const_logic_0);
    end process;


    ap_block_state44_pp0_stage3_iter2_assign_proc : process(regslice_both_dst_V_data_V_U_apdone_blk)
    begin
                ap_block_state44_pp0_stage3_iter2 <= (regslice_both_dst_V_data_V_U_apdone_blk = ap_const_logic_1);
    end process;

        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage8_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_250_assign_proc : process(ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19_11001)
    begin
                ap_condition_250 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_const_logic_1));
    end process;


    ap_condition_274_assign_proc : process(icmp_ln86_reg_2223, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, icmp_ln87_reg_2273)
    begin
                ap_condition_274 <= ((icmp_ln87_reg_2273 = ap_const_lv1_1) and (icmp_ln86_reg_2223 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_const_logic_1));
    end process;


    ap_condition_351_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, icmp_ln65_reg_2199)
    begin
                ap_condition_351 <= ((icmp_ln65_reg_2199 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001));
    end process;


    ap_condition_507_assign_proc : process(icmp_ln86_reg_2223, icmp_ln87_reg_2273, icmp_ln92_reg_2282)
    begin
                ap_condition_507 <= ((icmp_ln92_reg_2282 = ap_const_lv1_1) and (icmp_ln87_reg_2273 = ap_const_lv1_1) and (icmp_ln86_reg_2223 = ap_const_lv1_1));
    end process;


    ap_condition_618_assign_proc : process(ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19_11001, icmp_ln86_reg_2223, and_ln100_reg_2420)
    begin
                ap_condition_618 <= ((icmp_ln86_reg_2223 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln100_reg_2420) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001));
    end process;


    ap_condition_623_assign_proc : process(icmp_ln86_reg_2223, and_ln100_reg_2420, or_ln103_fu_1318_p2)
    begin
                ap_condition_623 <= ((or_ln103_fu_1318_p2 = ap_const_lv1_0) and (icmp_ln86_reg_2223 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln100_reg_2420));
    end process;


    ap_condition_674_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1)
    begin
                ap_condition_674 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001));
    end process;


    ap_condition_679_assign_proc : process(and_ln100_reg_2420, icmp_ln86_reg_2223_pp0_iter1_reg, or_ln124_fu_1523_p2)
    begin
                ap_condition_679 <= ((or_ln124_fu_1523_p2 = ap_const_lv1_0) and (icmp_ln86_reg_2223_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln100_reg_2420));
    end process;


    ap_condition_877_assign_proc : process(ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18_11001)
    begin
                ap_condition_877 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_const_logic_1 = ap_const_logic_1));
    end process;


    ap_condition_943_assign_proc : process(and_ln100_reg_2420, icmp_ln86_reg_2223_pp0_iter1_reg, or_ln124_fu_1523_p2)
    begin
                ap_condition_943 <= ((or_ln124_fu_1523_p2 = ap_const_lv1_1) and (icmp_ln86_reg_2223_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln100_reg_2420));
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_empty_20_phi_fu_497_p4_assign_proc : process(stop_loc_1_reg_430, icmp_ln86_reg_2223, and_ln100_reg_2420, or_ln103_reg_2474, ap_phi_reg_pp0_iter1_empty_20_reg_494)
    begin
        if (((or_ln103_reg_2474 = ap_const_lv1_1) and (icmp_ln86_reg_2223 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln100_reg_2420))) then 
            ap_phi_mux_empty_20_phi_fu_497_p4 <= stop_loc_1_reg_430;
        else 
            ap_phi_mux_empty_20_phi_fu_497_p4 <= ap_phi_reg_pp0_iter1_empty_20_reg_494;
        end if; 
    end process;


    ap_phi_mux_empty_21_phi_fu_530_p4_assign_proc : process(icmp_ln86_reg_2223, and_ln100_reg_2420, ap_phi_mux_empty_20_phi_fu_497_p4, or_ln108_fu_1379_p2, or_ln110_fu_1390_p2, ap_phi_reg_pp0_iter1_empty_21_reg_527)
    begin
        if (((icmp_ln86_reg_2223 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln100_reg_2420))) then
            if ((or_ln108_fu_1379_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_empty_21_phi_fu_530_p4 <= or_ln110_fu_1390_p2;
            elsif ((or_ln108_fu_1379_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_empty_21_phi_fu_530_p4 <= ap_phi_mux_empty_20_phi_fu_497_p4;
            else 
                ap_phi_mux_empty_21_phi_fu_530_p4 <= ap_phi_reg_pp0_iter1_empty_21_reg_527;
            end if;
        else 
            ap_phi_mux_empty_21_phi_fu_530_p4 <= ap_phi_reg_pp0_iter1_empty_21_reg_527;
        end if; 
    end process;


    ap_phi_mux_empty_23_phi_fu_596_p4_assign_proc : process(and_ln100_reg_2420, icmp_ln86_reg_2223_pp0_iter1_reg, ap_phi_reg_pp0_iter1_empty_22_reg_560, or_ln119_fu_1491_p2, or_ln121_fu_1502_p2, ap_phi_reg_pp0_iter1_empty_23_reg_593)
    begin
        if (((icmp_ln86_reg_2223_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln100_reg_2420))) then
            if ((or_ln119_fu_1491_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_empty_23_phi_fu_596_p4 <= or_ln121_fu_1502_p2;
            elsif ((or_ln119_fu_1491_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_empty_23_phi_fu_596_p4 <= ap_phi_reg_pp0_iter1_empty_22_reg_560;
            else 
                ap_phi_mux_empty_23_phi_fu_596_p4 <= ap_phi_reg_pp0_iter1_empty_23_reg_593;
            end if;
        else 
            ap_phi_mux_empty_23_phi_fu_596_p4 <= ap_phi_reg_pp0_iter1_empty_23_reg_593;
        end if; 
    end process;


    ap_phi_mux_empty_24_phi_fu_606_p4_assign_proc : process(and_ln100_reg_2420, icmp_ln86_reg_2223_pp0_iter1_reg, or_ln124_fu_1523_p2, or_ln126_fu_1535_p2, ap_phi_mux_empty_23_phi_fu_596_p4, ap_phi_reg_pp0_iter1_empty_24_reg_603)
    begin
        if (((icmp_ln86_reg_2223_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln100_reg_2420))) then
            if ((or_ln124_fu_1523_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_empty_24_phi_fu_606_p4 <= or_ln126_fu_1535_p2;
            elsif ((or_ln124_fu_1523_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_empty_24_phi_fu_606_p4 <= ap_phi_mux_empty_23_phi_fu_596_p4;
            else 
                ap_phi_mux_empty_24_phi_fu_606_p4 <= ap_phi_reg_pp0_iter1_empty_24_reg_603;
            end if;
        else 
            ap_phi_mux_empty_24_phi_fu_606_p4 <= ap_phi_reg_pp0_iter1_empty_24_reg_603;
        end if; 
    end process;


    ap_phi_mux_empty_25_phi_fu_738_p6_assign_proc : process(empty_24_reg_603, and_ln100_reg_2420, icmp_ln86_reg_2223_pp0_iter1_reg, or_ln129_reg_2603, or_ln131_fu_1571_p2, ap_phi_reg_pp0_iter1_empty_25_reg_735)
    begin
        if (((icmp_ln86_reg_2223_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln100_reg_2420))) then
            if ((or_ln129_reg_2603 = ap_const_lv1_0)) then 
                ap_phi_mux_empty_25_phi_fu_738_p6 <= or_ln131_fu_1571_p2;
            elsif ((or_ln129_reg_2603 = ap_const_lv1_1)) then 
                ap_phi_mux_empty_25_phi_fu_738_p6 <= empty_24_reg_603;
            else 
                ap_phi_mux_empty_25_phi_fu_738_p6 <= ap_phi_reg_pp0_iter1_empty_25_reg_735;
            end if;
        else 
            ap_phi_mux_empty_25_phi_fu_738_p6 <= ap_phi_reg_pp0_iter1_empty_25_reg_735;
        end if; 
    end process;


    ap_phi_mux_first_b_loc_1_phi_fu_712_p6_assign_proc : process(and_ln100_reg_2420, icmp_ln86_reg_2223_pp0_iter1_reg, or_ln129_reg_2603, ap_phi_reg_pp0_iter1_first_b_loc_0_reg_614, ap_phi_reg_pp0_iter1_first_b_loc_1_reg_709)
    begin
        if ((((or_ln129_reg_2603 = ap_const_lv1_1) and (icmp_ln86_reg_2223_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln100_reg_2420)) or ((or_ln129_reg_2603 = ap_const_lv1_0) and (icmp_ln86_reg_2223_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln100_reg_2420)))) then 
            ap_phi_mux_first_b_loc_1_phi_fu_712_p6 <= ap_phi_reg_pp0_iter1_first_b_loc_0_reg_614;
        else 
            ap_phi_mux_first_b_loc_1_phi_fu_712_p6 <= ap_phi_reg_pp0_iter1_first_b_loc_1_reg_709;
        end if; 
    end process;


    ap_phi_mux_first_r_loc_1_phi_fu_688_p6_assign_proc : process(and_ln100_reg_2420, icmp_ln86_reg_2223_pp0_iter1_reg, or_ln129_reg_2603, ap_phi_reg_pp0_iter1_first_r_loc_0_reg_652, ap_phi_reg_pp0_iter1_first_r_loc_1_reg_685)
    begin
        if ((((or_ln129_reg_2603 = ap_const_lv1_1) and (icmp_ln86_reg_2223_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln100_reg_2420)) or ((or_ln129_reg_2603 = ap_const_lv1_0) and (icmp_ln86_reg_2223_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln100_reg_2420)))) then 
            ap_phi_mux_first_r_loc_1_phi_fu_688_p6 <= ap_phi_reg_pp0_iter1_first_r_loc_0_reg_652;
        else 
            ap_phi_mux_first_r_loc_1_phi_fu_688_p6 <= ap_phi_reg_pp0_iter1_first_r_loc_1_reg_685;
        end if; 
    end process;


    ap_phi_mux_last_b_loc_1_phi_fu_725_p6_assign_proc : process(and_ln100_reg_2420, icmp_ln86_reg_2223_pp0_iter1_reg, or_ln129_reg_2603, ap_phi_reg_pp0_iter1_last_b_loc_0_reg_623, ap_phi_reg_pp0_iter1_last_b_loc_1_reg_722)
    begin
        if ((((or_ln129_reg_2603 = ap_const_lv1_1) and (icmp_ln86_reg_2223_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln100_reg_2420)) or ((or_ln129_reg_2603 = ap_const_lv1_0) and (icmp_ln86_reg_2223_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln100_reg_2420)))) then 
            ap_phi_mux_last_b_loc_1_phi_fu_725_p6 <= ap_phi_reg_pp0_iter1_last_b_loc_0_reg_623;
        else 
            ap_phi_mux_last_b_loc_1_phi_fu_725_p6 <= ap_phi_reg_pp0_iter1_last_b_loc_1_reg_722;
        end if; 
    end process;


    ap_phi_mux_last_r_loc_0_phi_fu_701_p6_assign_proc : process(and_ln100_reg_2420, icmp_ln86_reg_2223_pp0_iter1_reg, xor_ln130_reg_2429, last_r_load_reg_2553, or_ln129_reg_2603, ap_phi_reg_pp0_iter1_last_r_loc_0_reg_698)
    begin
        if (((icmp_ln86_reg_2223_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln100_reg_2420))) then
            if ((or_ln129_reg_2603 = ap_const_lv1_0)) then 
                ap_phi_mux_last_r_loc_0_phi_fu_701_p6 <= xor_ln130_reg_2429;
            elsif ((or_ln129_reg_2603 = ap_const_lv1_1)) then 
                ap_phi_mux_last_r_loc_0_phi_fu_701_p6 <= last_r_load_reg_2553;
            else 
                ap_phi_mux_last_r_loc_0_phi_fu_701_p6 <= ap_phi_reg_pp0_iter1_last_r_loc_0_reg_698;
            end if;
        else 
            ap_phi_mux_last_r_loc_0_phi_fu_701_p6 <= ap_phi_reg_pp0_iter1_last_r_loc_0_reg_698;
        end if; 
    end process;


    ap_phi_mux_stop_flag_2_phi_fu_476_p4_assign_proc : process(icmp_ln86_reg_2223, and_ln100_reg_2420, or_ln103_reg_2474, ap_phi_reg_pp0_iter1_stop_flag_1_reg_455, ap_phi_reg_pp0_iter1_stop_flag_2_reg_472)
    begin
        if (((or_ln103_reg_2474 = ap_const_lv1_1) and (icmp_ln86_reg_2223 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln100_reg_2420))) then 
            ap_phi_mux_stop_flag_2_phi_fu_476_p4 <= ap_phi_reg_pp0_iter1_stop_flag_1_reg_455;
        else 
            ap_phi_mux_stop_flag_2_phi_fu_476_p4 <= ap_phi_reg_pp0_iter1_stop_flag_2_reg_472;
        end if; 
    end process;


    ap_phi_mux_stop_flag_3_phi_fu_507_p4_assign_proc : process(icmp_ln86_reg_2223, and_ln100_reg_2420, ap_phi_mux_stop_flag_2_phi_fu_476_p4, ap_phi_reg_pp0_iter1_stop_flag_3_reg_504, or_ln108_fu_1379_p2)
    begin
        if (((icmp_ln86_reg_2223 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln100_reg_2420))) then
            if ((or_ln108_fu_1379_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_stop_flag_3_phi_fu_507_p4 <= ap_const_lv1_1;
            elsif ((or_ln108_fu_1379_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_stop_flag_3_phi_fu_507_p4 <= ap_phi_mux_stop_flag_2_phi_fu_476_p4;
            else 
                ap_phi_mux_stop_flag_3_phi_fu_507_p4 <= ap_phi_reg_pp0_iter1_stop_flag_3_reg_504;
            end if;
        else 
            ap_phi_mux_stop_flag_3_phi_fu_507_p4 <= ap_phi_reg_pp0_iter1_stop_flag_3_reg_504;
        end if; 
    end process;


    ap_phi_mux_stop_flag_5_phi_fu_573_p4_assign_proc : process(and_ln100_reg_2420, icmp_ln86_reg_2223_pp0_iter1_reg, ap_phi_reg_pp0_iter1_stop_flag_4_reg_538, ap_phi_reg_pp0_iter1_stop_flag_5_reg_570, or_ln119_fu_1491_p2)
    begin
        if (((icmp_ln86_reg_2223_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln100_reg_2420))) then
            if ((or_ln119_fu_1491_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_stop_flag_5_phi_fu_573_p4 <= ap_const_lv1_1;
            elsif ((or_ln119_fu_1491_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_stop_flag_5_phi_fu_573_p4 <= ap_phi_reg_pp0_iter1_stop_flag_4_reg_538;
            else 
                ap_phi_mux_stop_flag_5_phi_fu_573_p4 <= ap_phi_reg_pp0_iter1_stop_flag_5_reg_570;
            end if;
        else 
            ap_phi_mux_stop_flag_5_phi_fu_573_p4 <= ap_phi_reg_pp0_iter1_stop_flag_5_reg_570;
        end if; 
    end process;

    ap_phi_mux_stop_flag_7_phi_fu_778_p6 <= ap_phi_reg_pp0_iter1_stop_flag_7_reg_774;

    ap_phi_mux_stop_loc_1_phi_fu_433_p6_assign_proc : process(icmp_ln86_reg_2223, icmp_ln87_reg_2273, icmp_ln92_reg_2282, ap_phi_reg_pp0_iter0_stop_loc_1_reg_430)
    begin
        if (((icmp_ln92_reg_2282 = ap_const_lv1_1) and (icmp_ln87_reg_2273 = ap_const_lv1_1) and (icmp_ln86_reg_2223 = ap_const_lv1_1))) then 
            ap_phi_mux_stop_loc_1_phi_fu_433_p6 <= ap_const_lv8_0;
        else 
            ap_phi_mux_stop_loc_1_phi_fu_433_p6 <= ap_phi_reg_pp0_iter0_stop_loc_1_reg_430;
        end if; 
    end process;


    ap_phi_mux_stop_new_2_phi_fu_487_p4_assign_proc : process(icmp_ln86_reg_2223, and_ln100_reg_2420, or_ln103_reg_2474, ap_phi_reg_pp0_iter1_stop_new_2_reg_484)
    begin
        if (((or_ln103_reg_2474 = ap_const_lv1_1) and (icmp_ln86_reg_2223 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln100_reg_2420))) then 
            ap_phi_mux_stop_new_2_phi_fu_487_p4 <= ap_const_lv8_0;
        else 
            ap_phi_mux_stop_new_2_phi_fu_487_p4 <= ap_phi_reg_pp0_iter1_stop_new_2_reg_484;
        end if; 
    end process;


    ap_phi_mux_stop_new_3_phi_fu_519_p4_assign_proc : process(icmp_ln86_reg_2223, and_ln100_reg_2420, ap_phi_mux_stop_new_2_phi_fu_487_p4, or_ln108_fu_1379_p2, ap_phi_reg_pp0_iter1_stop_new_3_reg_516, or_ln110_fu_1390_p2)
    begin
        if (((icmp_ln86_reg_2223 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln100_reg_2420))) then
            if ((or_ln108_fu_1379_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_stop_new_3_phi_fu_519_p4 <= or_ln110_fu_1390_p2;
            elsif ((or_ln108_fu_1379_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_stop_new_3_phi_fu_519_p4 <= ap_phi_mux_stop_new_2_phi_fu_487_p4;
            else 
                ap_phi_mux_stop_new_3_phi_fu_519_p4 <= ap_phi_reg_pp0_iter1_stop_new_3_reg_516;
            end if;
        else 
            ap_phi_mux_stop_new_3_phi_fu_519_p4 <= ap_phi_reg_pp0_iter1_stop_new_3_reg_516;
        end if; 
    end process;


    ap_phi_mux_stop_new_5_phi_fu_585_p4_assign_proc : process(and_ln100_reg_2420, icmp_ln86_reg_2223_pp0_iter1_reg, ap_phi_reg_pp0_iter1_stop_new_4_reg_550, or_ln119_fu_1491_p2, ap_phi_reg_pp0_iter1_stop_new_5_reg_582, or_ln121_fu_1502_p2)
    begin
        if (((icmp_ln86_reg_2223_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln100_reg_2420))) then
            if ((or_ln119_fu_1491_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_stop_new_5_phi_fu_585_p4 <= or_ln121_fu_1502_p2;
            elsif ((or_ln119_fu_1491_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_stop_new_5_phi_fu_585_p4 <= ap_phi_reg_pp0_iter1_stop_new_4_reg_550;
            else 
                ap_phi_mux_stop_new_5_phi_fu_585_p4 <= ap_phi_reg_pp0_iter1_stop_new_5_reg_582;
            end if;
        else 
            ap_phi_mux_stop_new_5_phi_fu_585_p4 <= ap_phi_reg_pp0_iter1_stop_new_5_reg_582;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_empty_20_reg_494 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_empty_22_reg_560 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_empty_25_reg_735 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_first_b_loc_0_reg_614 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_first_b_loc_1_reg_709 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_first_g_loc_0_reg_632 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_first_g_loc_1_reg_748 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_first_r_loc_0_reg_652 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_first_r_loc_1_reg_685 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_last_b_loc_0_reg_623 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_last_b_loc_1_reg_722 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_last_g_loc_0_reg_642 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_last_g_loc_1_reg_761 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_last_r_loc_0_reg_698 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_stop_flag_2_reg_472 <= "X";
    ap_phi_reg_pp0_iter0_stop_flag_4_reg_538 <= "X";
    ap_phi_reg_pp0_iter0_stop_flag_6_reg_661 <= "X";
    ap_phi_reg_pp0_iter0_stop_flag_7_reg_774 <= "X";
    ap_phi_reg_pp0_iter0_stop_new_2_reg_484 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_stop_new_4_reg_550 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_stop_new_6_reg_674 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_stop_new_7_reg_789 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter1_empty_21_reg_527 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter1_empty_23_reg_593 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter1_empty_24_reg_603 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter1_stop_flag_3_reg_504 <= "X";
    ap_phi_reg_pp0_iter1_stop_flag_5_reg_570 <= "X";
    ap_phi_reg_pp0_iter1_stop_new_3_reg_516 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter1_stop_new_5_reg_582 <= "XXXXXXXX";
    ap_reset_idle_pp0 <= ap_const_logic_0;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    b_in_fu_882_p4 <= src_TDATA_int_regslice(23 downto 16);
    bitcast_ln317_1_fu_1822_p1 <= grp_fu_815_p2;
    bitcast_ln317_2_fu_1899_p1 <= sub2_reg_2707;
    bitcast_ln317_fu_1668_p1 <= grp_fu_815_p2;
    d_fu_2107_p4 <= ((val_2_fu_2101_p3 & val_1_reg_2784) & val_reg_2722);
    data_1_fu_1689_p3 <= 
        select_ln317_fu_1676_p3 when (or_ln317_fu_1684_p2(0) = '1') else 
        trunc_ln317_fu_1672_p1;
    data_2_fu_1843_p3 <= 
        select_ln317_2_fu_1830_p3 when (or_ln317_1_fu_1838_p2(0) = '1') else 
        trunc_ln317_1_fu_1826_p1;
    data_3_fu_1919_p3 <= 
        select_ln317_4_fu_1906_p3 when (or_ln317_2_fu_1914_p2(0) = '1') else 
        trunc_ln317_2_fu_1902_p1;
    data_fu_1098_p1 <= grp_fu_819_p2;

    dst_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter2, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, dst_TREADY_int_regslice)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1)))) then 
            dst_TDATA_blk_n <= dst_TREADY_int_regslice;
        else 
            dst_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_TVALID <= regslice_both_dst_V_data_V_U_vld_out;

    dst_TVALID_int_regslice_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter2, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            dst_TVALID_int_regslice <= ap_const_logic_1;
        else 
            dst_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    f_ap_vld_in_sig_assign_proc : process(f_ap_vld, f_ap_vld_preg)
    begin
        if ((f_ap_vld = ap_const_logic_1)) then 
            f_ap_vld_in_sig <= f_ap_vld;
        else 
            f_ap_vld_in_sig <= f_ap_vld_preg;
        end if; 
    end process;


    f_blk_n_assign_proc : process(f_ap_vld, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_const_logic_1))) then 
            f_blk_n <= f_ap_vld;
        else 
            f_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    f_in_sig_assign_proc : process(f, f_preg, f_ap_vld)
    begin
        if ((f_ap_vld = ap_const_logic_1)) then 
            f_in_sig <= f;
        else 
            f_in_sig <= f_preg;
        end if; 
    end process;

    g_in_fu_892_p4 <= src_TDATA_int_regslice(15 downto 8);

    grp_fu_1598_ce_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11_11001, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12_11001, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_block_pp0_stage13_11001, ap_CS_fsm_pp0_stage13)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_const_logic_1 
    = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then 
            grp_fu_1598_ce <= ap_const_logic_1;
        else 
            grp_fu_1598_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1598_p1 <= std_logic_vector(unsigned(zext_ln136_fu_1584_p1) - unsigned(zext_ln136_1_fu_1588_p1));

    grp_fu_1629_ce_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11_11001, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12_11001, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14_11001, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_block_pp0_stage13_11001, ap_CS_fsm_pp0_stage13)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_const_logic_1 
    = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001)))) then 
            grp_fu_1629_ce <= ap_const_logic_1;
        else 
            grp_fu_1629_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1653_ce_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11_11001, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12_11001, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16_11001, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14_11001, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_block_pp0_stage13_11001, ap_CS_fsm_pp0_stage13)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_const_logic_1 
    = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001)))) then 
            grp_fu_1653_ce <= ap_const_logic_1;
        else 
            grp_fu_1653_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_815_ce_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11_11001, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12_11001, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16_11001, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17_11001, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14_11001, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001, ap_block_pp0_stage13_11001, ap_CS_fsm_pp0_stage13)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_const_logic_1 
    = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001)))) then 
            grp_fu_815_ce <= ap_const_logic_1;
        else 
            grp_fu_815_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_815_p0_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_enable_reg_pp0_iter1, mul_reg_2646, mul2_reg_2651, mul1_reg_2656, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9))) then 
                grp_fu_815_p0 <= mul1_reg_2656;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8))) then 
                grp_fu_815_p0 <= mul2_reg_2651;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7))) then 
                grp_fu_815_p0 <= mul_reg_2646;
            else 
                grp_fu_815_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_815_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_815_p1_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, conv5_reg_2333, ap_CS_fsm_pp0_stage9, conv3_reg_2338, conv1_reg_2348, ap_enable_reg_pp0_iter1, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9))) then 
                grp_fu_815_p1 <= conv3_reg_2338;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8))) then 
                grp_fu_815_p1 <= conv5_reg_2333;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7))) then 
                grp_fu_815_p1 <= conv1_reg_2348;
            else 
                grp_fu_815_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_815_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_819_ce_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12_11001, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16_11001, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14_11001, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_block_pp0_stage13_11001, ap_CS_fsm_pp0_stage13)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_const_logic_1 
    = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then 
            grp_fu_819_ce <= ap_const_logic_1;
        else 
            grp_fu_819_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_819_p0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage3, conv_reg_2313, conv2_reg_2323, conv4_reg_2328, conv6_reg_2343, ap_CS_fsm_pp0_stage12, ap_enable_reg_pp0_iter1, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage12)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            grp_fu_819_p0 <= conv2_reg_2323;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            grp_fu_819_p0 <= conv4_reg_2328;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_819_p0 <= conv_reg_2313;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12) and (ap_const_logic_1 = ap_const_logic_1))) then 
            grp_fu_819_p0 <= conv6_reg_2343;
        else 
            grp_fu_819_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_819_p1_assign_proc : process(scale_r, scale_g, scale_b, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage4, f_read_reg_2137, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage12, ap_enable_reg_pp0_iter1, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage12)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            grp_fu_819_p1 <= scale_g;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            grp_fu_819_p1 <= scale_b;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_819_p1 <= scale_r;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12) and (ap_const_logic_1 = ap_const_logic_1))) then 
            grp_fu_819_p1 <= f_read_reg_2137;
        else 
            grp_fu_819_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_823_ce_assign_proc : process(ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)))) then 
            grp_fu_823_ce <= ap_const_logic_1;
        else 
            grp_fu_823_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_827_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_block_pp0_stage0_11001, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11_11001, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12_11001, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16_11001, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17_11001, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18_11001, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001)) or ((ap_const_logic_1 
    = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            grp_fu_827_ce <= ap_const_logic_1;
        else 
            grp_fu_827_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_827_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage4, zext_ln74_fu_935_p1, zext_ln75_fu_972_p1, zext_ln76_fu_1012_p1, ap_CS_fsm_pp0_stage3, zext_ln76_1_fu_1045_p1, zext_ln75_1_fu_1068_p1, ap_CS_fsm_pp0_stage6, zext_ln74_1_fu_1093_p1, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage15, sext_ln136_fu_1735_p1, sext_ln137_fu_1799_p1, sext_ln138_fu_1941_p1, ap_block_pp0_stage3, ap_block_pp0_stage6, ap_block_pp0_stage4, ap_block_pp0_stage17, ap_block_pp0_stage15, ap_block_pp0_stage16)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17))) then 
            grp_fu_827_p0 <= sext_ln138_fu_1941_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16))) then 
            grp_fu_827_p0 <= sext_ln137_fu_1799_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15))) then 
            grp_fu_827_p0 <= sext_ln136_fu_1735_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_const_logic_1))) then 
            grp_fu_827_p0 <= zext_ln74_1_fu_1093_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_const_logic_1))) then 
            grp_fu_827_p0 <= zext_ln75_1_fu_1068_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_const_logic_1))) then 
            grp_fu_827_p0 <= zext_ln76_1_fu_1045_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_const_logic_1))) then 
            grp_fu_827_p0 <= zext_ln76_fu_1012_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_const_logic_1))) then 
            grp_fu_827_p0 <= zext_ln75_fu_972_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_const_logic_1))) then 
            grp_fu_827_p0 <= zext_ln74_fu_935_p1;
        else 
            grp_fu_827_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_830_p2 <= std_logic_vector(unsigned(trunc_ln58_reg_2242) + unsigned(ap_const_lv8_1));
    icmp_ln100_1_fu_1257_p2 <= "0" when (ap_phi_mux_stop_loc_1_phi_fu_433_p6 = ap_const_lv8_E7) else "1";
    icmp_ln100_fu_1227_p2 <= "1" when (tmp_12_fu_1217_p4 = ap_const_lv9_0) else "0";
    icmp_ln103_fu_1306_p2 <= "1" when (unsigned(ap_phi_reg_pp0_iter0_threshold_loc_1_reg_443) < unsigned(invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_2_q1)) else "0";
    icmp_ln108_fu_1335_p2 <= "1" when (unsigned(ap_phi_reg_pp0_iter0_threshold_loc_1_reg_443) < unsigned(invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_2_q0)) else "0";
    icmp_ln113_fu_1398_p2 <= "1" when (unsigned(threshold_loc_1_reg_443) < unsigned(reg_840)) else "0";
    icmp_ln119_fu_1436_p2 <= "1" when (unsigned(threshold_loc_1_reg_443) < unsigned(invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_1_load_2_reg_2494)) else "0";
    icmp_ln124_fu_1441_p2 <= "1" when (unsigned(threshold_loc_1_reg_443) < unsigned(reg_835)) else "0";
    icmp_ln129_fu_1447_p2 <= "1" when (unsigned(threshold_loc_1_reg_443) < unsigned(invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_load_2_reg_2499)) else "0";
    icmp_ln135_fu_1578_p2 <= "1" when (ap_phi_mux_empty_25_phi_fu_738_p6 = ap_const_lv8_E7) else "0";
    icmp_ln142_fu_1233_p2 <= "1" when (unsigned(select_ln58_reg_2235) > unsigned(ap_const_lv16_47E)) else "0";
    icmp_ln65_fu_914_p2 <= "1" when (unsigned(select_ln58_1_fu_906_p3) < unsigned(ap_const_lv16_2CF)) else "0";
    icmp_ln74_1_fu_1464_p2 <= "1" when (unsigned(r_in_reg_2179_pp0_iter1_reg) > unsigned(last_r)) else "0";
    icmp_ln74_fu_1460_p2 <= "1" when (unsigned(r_in_reg_2179_pp0_iter1_reg) < unsigned(first_r_load_reg_2306)) else "0";
    icmp_ln75_1_fu_1473_p2 <= "1" when (unsigned(g_in_reg_2192_pp0_iter1_reg) > unsigned(last_g)) else "0";
    icmp_ln75_fu_1469_p2 <= "1" when (unsigned(g_in_reg_2192_pp0_iter1_reg) < unsigned(first_g_load_reg_2286)) else "0";
    icmp_ln76_1_fu_1361_p2 <= "1" when (unsigned(b_in_reg_2185) > unsigned(last_b)) else "0";
    icmp_ln76_fu_1357_p2 <= "1" when (unsigned(b_in_reg_2185) < unsigned(first_b_load_reg_2261)) else "0";
    icmp_ln86_fu_940_p2 <= "1" when (select_ln58_1_fu_906_p3 = ap_const_lv16_2CF) else "0";
    icmp_ln87_fu_1050_p2 <= "1" when (unsigned(add_ln87_reg_2254) < unsigned(ap_const_lv16_101)) else "0";
    icmp_ln89_fu_1077_p2 <= "1" when (unsigned(max) < unsigned(invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_2_q0)) else "0";
    icmp_ln92_fu_1059_p2 <= "1" when (add_ln87_reg_2254 = ap_const_lv16_FF) else "0";

    invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_1_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage19, invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_1_addr_reg_2208, ap_CS_fsm_pp0_stage18, zext_ln69_fu_925_p1, ap_block_pp0_stage18, zext_ln108_1_fu_1289_p1, zext_ln144_fu_1341_p1, ap_block_pp0_stage19)
    begin
        if ((ap_const_logic_1 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19))) then 
                invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_1_address0 <= zext_ln144_fu_1341_p1(8 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18))) then 
                invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_1_address0 <= zext_ln108_1_fu_1289_p1(8 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
                invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_1_address0 <= invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_1_addr_reg_2208;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_1_address0 <= zext_ln69_fu_925_p1(8 - 1 downto 0);
            else 
                invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_1_address0 <= "XXXXXXXX";
            end if;
        else 
            invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_1_address0 <= "XXXXXXXX";
        end if; 
    end process;


    invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_1_address1_assign_proc : process(ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage18, zext_ln103_fu_1268_p1, ap_block_pp0_stage18, ap_block_pp0_stage19, zext_ln145_fu_1347_p1)
    begin
        if ((ap_const_logic_1 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19))) then 
                invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_1_address1 <= zext_ln145_fu_1347_p1(8 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18))) then 
                invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_1_address1 <= zext_ln103_fu_1268_p1(8 - 1 downto 0);
            else 
                invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_1_address1 <= "XXXXXXXX";
            end if;
        else 
            invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_1_address1 <= "XXXXXXXX";
        end if; 
    end process;


    invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19_11001, ap_block_pp0_stage0_11001, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_const_logic_1 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1)))) then 
            invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_1_ce0 <= ap_const_logic_1;
        else 
            invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19_11001, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_const_logic_1 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_const_logic_1)))) then 
            invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_1_ce1 <= ap_const_logic_1;
        else 
            invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_1_d0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19, add_ln69_fu_998_p2)
    begin
        if ((ap_const_logic_1 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19))) then 
                invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_1_d0 <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
                invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_1_d0 <= add_ln69_fu_998_p2;
            else 
                invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_1_we0_assign_proc : process(ap_CS_fsm_pp0_stage2, icmp_ln65_reg_2199, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19_11001, icmp_ln86_reg_2223, ap_block_pp0_stage2_11001, icmp_ln142_reg_2406)
    begin
        if ((((icmp_ln142_reg_2406 = ap_const_lv1_1) and (icmp_ln86_reg_2223 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_const_logic_1)) or ((icmp_ln65_reg_2199 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_const_logic_1)))) then 
            invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_1_we0 <= ap_const_logic_1;
        else 
            invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_1_we1_assign_proc : process(ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19_11001, icmp_ln86_reg_2223, icmp_ln142_reg_2406)
    begin
        if (((icmp_ln142_reg_2406 = ap_const_lv1_1) and (icmp_ln86_reg_2223 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_const_logic_1))) then 
            invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_1_we1 <= ap_const_logic_1;
        else 
            invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_2_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage19, invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_2_addr_reg_2213, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage18, zext_ln70_fu_930_p1, zext_ln89_fu_1055_p1, ap_block_pp0_stage3, ap_block_pp0_stage18, zext_ln108_1_fu_1289_p1, zext_ln144_fu_1341_p1, ap_block_pp0_stage19)
    begin
        if ((ap_const_logic_1 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19))) then 
                invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_2_address0 <= zext_ln144_fu_1341_p1(8 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18))) then 
                invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_2_address0 <= zext_ln108_1_fu_1289_p1(8 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
                invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_2_address0 <= zext_ln89_fu_1055_p1(8 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
                invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_2_address0 <= invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_2_addr_reg_2213;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_2_address0 <= zext_ln70_fu_930_p1(8 - 1 downto 0);
            else 
                invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_2_address0 <= "XXXXXXXX";
            end if;
        else 
            invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_2_address0 <= "XXXXXXXX";
        end if; 
    end process;


    invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_2_address1_assign_proc : process(ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage18, zext_ln103_fu_1268_p1, ap_block_pp0_stage18, ap_block_pp0_stage19, zext_ln145_fu_1347_p1)
    begin
        if ((ap_const_logic_1 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19))) then 
                invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_2_address1 <= zext_ln145_fu_1347_p1(8 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18))) then 
                invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_2_address1 <= zext_ln103_fu_1268_p1(8 - 1 downto 0);
            else 
                invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_2_address1 <= "XXXXXXXX";
            end if;
        else 
            invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_2_address1 <= "XXXXXXXX";
        end if; 
    end process;


    invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19_11001, ap_block_pp0_stage0_11001, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_const_logic_1 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1)))) then 
            invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_2_ce0 <= ap_const_logic_1;
        else 
            invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_2_ce1_assign_proc : process(ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19_11001, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_const_logic_1 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_const_logic_1)))) then 
            invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_2_ce1 <= ap_const_logic_1;
        else 
            invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_2_d0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19, add_ln70_fu_1005_p2)
    begin
        if ((ap_const_logic_1 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19))) then 
                invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_2_d0 <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
                invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_2_d0 <= add_ln70_fu_1005_p2;
            else 
                invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_2_we0_assign_proc : process(ap_CS_fsm_pp0_stage2, icmp_ln65_reg_2199, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19_11001, icmp_ln86_reg_2223, ap_block_pp0_stage2_11001, icmp_ln142_reg_2406)
    begin
        if ((((icmp_ln142_reg_2406 = ap_const_lv1_1) and (icmp_ln86_reg_2223 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_const_logic_1)) or ((icmp_ln65_reg_2199 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_const_logic_1)))) then 
            invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_2_we0 <= ap_const_logic_1;
        else 
            invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_2_we1_assign_proc : process(ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19_11001, icmp_ln86_reg_2223, icmp_ln142_reg_2406)
    begin
        if (((icmp_ln142_reg_2406 = ap_const_lv1_1) and (icmp_ln86_reg_2223 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_const_logic_1))) then 
            invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_2_we1 <= ap_const_logic_1;
        else 
            invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_2_we1 <= ap_const_logic_0;
        end if; 
    end process;


    invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage19, invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_addr_reg_2203, ap_CS_fsm_pp0_stage18, zext_ln68_fu_920_p1, ap_block_pp0_stage18, zext_ln108_1_fu_1289_p1, zext_ln144_fu_1341_p1, ap_block_pp0_stage19)
    begin
        if ((ap_const_logic_1 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19))) then 
                invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_address0 <= zext_ln144_fu_1341_p1(8 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18))) then 
                invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_address0 <= zext_ln108_1_fu_1289_p1(8 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
                invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_address0 <= invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_addr_reg_2203;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_address0 <= zext_ln68_fu_920_p1(8 - 1 downto 0);
            else 
                invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_address0 <= "XXXXXXXX";
            end if;
        else 
            invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_address0 <= "XXXXXXXX";
        end if; 
    end process;


    invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_address1_assign_proc : process(ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage18, zext_ln103_fu_1268_p1, ap_block_pp0_stage18, ap_block_pp0_stage19, zext_ln145_fu_1347_p1)
    begin
        if ((ap_const_logic_1 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19))) then 
                invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_address1 <= zext_ln145_fu_1347_p1(8 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18))) then 
                invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_address1 <= zext_ln103_fu_1268_p1(8 - 1 downto 0);
            else 
                invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_address1 <= "XXXXXXXX";
            end if;
        else 
            invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_address1 <= "XXXXXXXX";
        end if; 
    end process;


    invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19_11001, ap_block_pp0_stage0_11001, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_const_logic_1 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1)))) then 
            invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_ce0 <= ap_const_logic_1;
        else 
            invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_ce1_assign_proc : process(ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19_11001, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_const_logic_1 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_const_logic_1)))) then 
            invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_ce1 <= ap_const_logic_1;
        else 
            invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_d0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19, add_ln68_fu_991_p2)
    begin
        if ((ap_const_logic_1 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19))) then 
                invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_d0 <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
                invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_d0 <= add_ln68_fu_991_p2;
            else 
                invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_we0_assign_proc : process(ap_CS_fsm_pp0_stage2, icmp_ln65_reg_2199, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19_11001, icmp_ln86_reg_2223, ap_block_pp0_stage2_11001, icmp_ln142_reg_2406)
    begin
        if ((((icmp_ln142_reg_2406 = ap_const_lv1_1) and (icmp_ln86_reg_2223 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_const_logic_1)) or ((icmp_ln65_reg_2199 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_const_logic_1)))) then 
            invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_we0 <= ap_const_logic_1;
        else 
            invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_we0 <= ap_const_logic_0;
        end if; 
    end process;


    invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_we1_assign_proc : process(ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19_11001, icmp_ln86_reg_2223, icmp_ln142_reg_2406)
    begin
        if (((icmp_ln142_reg_2406 = ap_const_lv1_1) and (icmp_ln86_reg_2223 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_const_logic_1))) then 
            invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_we1 <= ap_const_logic_1;
        else 
            invstripe_stream_stream_axis_ap_uint_32_1ul_1ul_1ul_0_float_hist_we1 <= ap_const_logic_0;
        end if; 
    end process;

    lshr_ln71_1_fu_1769_p2 <= std_logic_vector(shift_right(unsigned(zext_ln68_1_fu_1748_p1),to_integer(unsigned('0' & zext_ln71_fu_1765_p1(31-1 downto 0)))));
    lshr_ln71_2_fu_1975_p2 <= std_logic_vector(shift_right(unsigned(zext_ln68_2_fu_1954_p1),to_integer(unsigned('0' & zext_ln71_1_fu_1971_p1(31-1 downto 0)))));
    lshr_ln71_3_fu_2068_p2 <= std_logic_vector(shift_right(unsigned(zext_ln68_3_fu_2057_p1),to_integer(unsigned('0' & zext_ln71_2_fu_2064_p1(31-1 downto 0)))));
    lshr_ln71_fu_1179_p2 <= std_logic_vector(shift_right(unsigned(zext_ln68_4_fu_1133_p1),to_integer(unsigned('0' & zext_ln71_3_fu_1175_p1(31-1 downto 0)))));
    mantissa_1_fu_1945_p4 <= ((ap_const_lv1_1 & trunc_ln371_1_reg_2727) & ap_const_lv1_0);
    mantissa_2_fu_2048_p4 <= ((ap_const_lv1_1 & trunc_ln371_2_reg_2754) & ap_const_lv1_0);
    mantissa_3_fu_1124_p4 <= ((ap_const_lv1_1 & trunc_ln371_3_reg_2359) & ap_const_lv1_0);
    mantissa_fu_1739_p4 <= ((ap_const_lv1_1 & trunc_ln371_reg_2666) & ap_const_lv1_0);
    or_ln103_fu_1318_p2 <= (xor_ln103_fu_1312_p2 or trunc_ln100_reg_2415);
    or_ln105_fu_1329_p2 <= (stop_loc_1_reg_430 or ap_const_lv8_1);
    or_ln108_fu_1379_p2 <= (xor_ln108_fu_1366_p2 or tmp_13_fu_1371_p3);
    or_ln110_fu_1390_p2 <= (ap_phi_mux_empty_20_phi_fu_497_p4 or ap_const_lv8_80);
    or_ln113_fu_1418_p2 <= (xor_ln113_fu_1404_p2 or tmp_14_fu_1410_p3);
    or_ln115_fu_1430_p2 <= (ap_phi_mux_empty_21_phi_fu_530_p4 or ap_const_lv8_2);
    or_ln119_fu_1491_p2 <= (xor_ln119_fu_1478_p2 or tmp_15_fu_1483_p3);
    or_ln121_fu_1502_p2 <= (ap_phi_reg_pp0_iter1_empty_22_reg_560 or ap_const_lv8_40);
    or_ln124_fu_1523_p2 <= (xor_ln124_fu_1510_p2 or tmp_16_fu_1515_p3);
    or_ln126_fu_1535_p2 <= (ap_phi_mux_empty_23_phi_fu_596_p4 or ap_const_lv8_4);
    or_ln129_fu_1555_p2 <= (xor_ln129_fu_1542_p2 or tmp_17_fu_1547_p3);
    or_ln131_fu_1571_p2 <= (empty_24_reg_603 or ap_const_lv8_20);
    or_ln160_fu_952_p2 <= (src_TUSER_int_regslice or src_TLAST_int_regslice);
    or_ln317_1_fu_1838_p2 <= (icmp_ln75_reg_2576 or and_ln75_fu_1817_p2);
    or_ln317_2_fu_1914_p2 <= (icmp_ln76_reg_2510 or and_ln76_fu_1894_p2);
    or_ln317_fu_1684_p2 <= (icmp_ln74_reg_2565 or and_ln74_fu_1663_p2);
    r_in_fu_878_p1 <= src_TDATA_int_regslice(8 - 1 downto 0);
    select_ln160_1_fu_1028_p3 <= 
        ap_const_lv16_0 when (p_last_reg_2163(0) = '1') else 
        add_ln166_fu_1022_p2;
    select_ln160_fu_958_p3 <= 
        add_ln163_fu_946_p2 when (src_TLAST_int_regslice(0) = '1') else 
        ap_const_lv16_0;
    select_ln317_2_fu_1830_p3 <= 
        ap_const_lv31_437F0000 when (and_ln75_fu_1817_p2(0) = '1') else 
        ap_const_lv31_0;
    select_ln317_4_fu_1906_p3 <= 
        ap_const_lv31_437F0000 when (and_ln76_fu_1894_p2(0) = '1') else 
        ap_const_lv31_0;
    select_ln317_fu_1676_p3 <= 
        ap_const_lv31_437F0000 when (and_ln74_fu_1663_p2(0) = '1') else 
        ap_const_lv31_0;
    select_ln58_1_fu_906_p3 <= 
        ap_const_lv16_0 when (src_TUSER_int_regslice(0) = '1') else 
        y;
    select_ln58_fu_980_p3 <= 
        ap_const_lv16_0 when (p_user_reg_2157(0) = '1') else 
        x;
    select_ln71_1_fu_1755_p3 <= 
        sext_ln71_fu_1752_p1 when (tmp_reg_2676(0) = '1') else 
        add_ln346_1_reg_2671;
    select_ln71_3_fu_1961_p3 <= 
        sext_ln71_2_fu_1958_p1 when (tmp_3_reg_2737(0) = '1') else 
        add_ln346_2_reg_2732;
    select_ln71_5_fu_2031_p3 <= 
        sext_ln71_4_fu_2027_p1 when (tmp_7_fu_2014_p3(0) = '1') else 
        add_ln346_3_fu_2008_p2;
    select_ln71_fu_1163_p3 <= 
        sext_ln71_6_fu_1159_p1 when (tmp_10_fu_1146_p3(0) = '1') else 
        add_ln346_fu_1140_p2;
        sext_ln136_fu_1735_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sdiv_ln136_reg_2661),32));

        sext_ln137_fu_1799_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sdiv_ln137_reg_2692),32));

        sext_ln138_fu_1941_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sdiv_ln138_reg_2717),32));

        sext_ln71_1_fu_1761_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln71_1_fu_1755_p3),32));

        sext_ln71_2_fu_1958_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln71_2_reg_2743),9));

        sext_ln71_3_fu_1967_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln71_3_fu_1961_p3),32));

        sext_ln71_4_fu_2027_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln71_3_fu_2022_p2),9));

        sext_ln71_5_fu_2061_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln71_5_reg_2779),32));

        sext_ln71_6_fu_1159_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln71_fu_1154_p2),9));

        sext_ln71_7_fu_1171_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln71_fu_1163_p3),32));

        sext_ln71_fu_1752_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln71_1_reg_2682),9));

    shl_ln71_1_fu_1775_p2 <= std_logic_vector(shift_left(unsigned(zext_ln68_1_fu_1748_p1),to_integer(unsigned('0' & zext_ln71_fu_1765_p1(31-1 downto 0)))));
    shl_ln71_2_fu_1981_p2 <= std_logic_vector(shift_left(unsigned(zext_ln68_2_fu_1954_p1),to_integer(unsigned('0' & zext_ln71_1_fu_1971_p1(31-1 downto 0)))));
    shl_ln71_3_fu_2074_p2 <= std_logic_vector(shift_left(unsigned(zext_ln68_3_fu_2057_p1),to_integer(unsigned('0' & zext_ln71_2_fu_2064_p1(31-1 downto 0)))));
    shl_ln71_fu_1185_p2 <= std_logic_vector(shift_left(unsigned(zext_ln68_4_fu_1133_p1),to_integer(unsigned('0' & zext_ln71_3_fu_1175_p1(31-1 downto 0)))));

    src_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, src_TVALID_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_const_logic_1))) then 
            src_TDATA_blk_n <= src_TVALID_int_regslice;
        else 
            src_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    src_TREADY <= regslice_both_src_V_data_V_U_ack_in;

    src_TREADY_int_regslice_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1))) then 
            src_TREADY_int_regslice <= ap_const_logic_1;
        else 
            src_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln137_fu_1612_p2 <= std_logic_vector(unsigned(zext_ln137_fu_1604_p1) - unsigned(zext_ln137_1_fu_1608_p1));
    sub_ln138_fu_1642_p2 <= std_logic_vector(unsigned(zext_ln138_fu_1634_p1) - unsigned(zext_ln138_1_fu_1638_p1));
    sub_ln145_fu_1301_p2 <= std_logic_vector(unsigned(ap_const_lv8_7E) - unsigned(trunc_ln58_reg_2242));
    sub_ln71_1_fu_1729_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(xs_exp_fu_1697_p4));
    sub_ln71_2_fu_1883_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(xs_exp_1_fu_1851_p4));
    sub_ln71_3_fu_2022_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(xs_exp_2_reg_2748));
    sub_ln71_fu_1154_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(xs_exp_4_reg_2353));
    tmp_10_fu_1146_p3 <= add_ln346_fu_1140_p2(8 downto 8);
    tmp_12_fu_1217_p4 <= add_ln100_fu_1212_p2(15 downto 7);
    tmp_13_fu_1371_p3 <= ap_phi_mux_empty_20_phi_fu_497_p4(7 downto 7);
    tmp_14_fu_1410_p3 <= ap_phi_mux_empty_21_phi_fu_530_p4(1 downto 1);
    tmp_15_fu_1483_p3 <= ap_phi_reg_pp0_iter1_empty_22_reg_560(6 downto 6);
    tmp_16_fu_1515_p3 <= ap_phi_mux_empty_23_phi_fu_596_p4(2 downto 2);
    tmp_17_fu_1547_p3 <= ap_phi_mux_empty_24_phi_fu_606_p4(5 downto 5);
    tmp_7_fu_2014_p3 <= add_ln346_3_fu_2008_p2(8 downto 8);
    trunc_ln100_1_fu_1209_p1 <= select_ln58_reg_2235(7 - 1 downto 0);
    trunc_ln100_fu_1253_p1 <= ap_phi_mux_stop_loc_1_phi_fu_433_p6(1 - 1 downto 0);
    trunc_ln317_1_fu_1826_p1 <= bitcast_ln317_1_fu_1822_p1(31 - 1 downto 0);
    trunc_ln317_2_fu_1902_p1 <= bitcast_ln317_2_fu_1899_p1(31 - 1 downto 0);
    trunc_ln317_fu_1672_p1 <= bitcast_ln317_fu_1668_p1(31 - 1 downto 0);
    trunc_ln371_1_fu_1861_p1 <= data_2_fu_1843_p3(23 - 1 downto 0);
    trunc_ln371_2_fu_1937_p1 <= data_3_fu_1919_p3(23 - 1 downto 0);
    trunc_ln371_3_fu_1112_p1 <= data_fu_1098_p1(23 - 1 downto 0);
    trunc_ln371_fu_1707_p1 <= data_1_fu_1689_p3(23 - 1 downto 0);
    trunc_ln58_fu_987_p1 <= select_ln58_fu_980_p3(8 - 1 downto 0);
    val_1_fu_2042_p3 <= 
        zext_ln74_3_fu_2039_p1 when (tmp_3_reg_2737(0) = '1') else 
        tmp_4_reg_2769;
    val_2_fu_2101_p3 <= 
        zext_ln74_4_fu_2098_p1 when (tmp_7_reg_2774(0) = '1') else 
        tmp_6_reg_2794;
    val_3_fu_1241_p3 <= 
        zext_ln74_5_fu_1238_p1 when (tmp_10_reg_2376(0) = '1') else 
        tmp_8_reg_2386;
    val_fu_1806_p3 <= 
        zext_ln74_2_fu_1803_p1 when (tmp_reg_2676(0) = '1') else 
        tmp_2_reg_2702;
    xor_ln103_fu_1312_p2 <= (icmp_ln103_fu_1306_p2 xor ap_const_lv1_1);
    xor_ln108_fu_1366_p2 <= (icmp_ln108_reg_2489 xor ap_const_lv1_1);
    xor_ln113_fu_1404_p2 <= (icmp_ln113_fu_1398_p2 xor ap_const_lv1_1);
    xor_ln119_fu_1478_p2 <= (icmp_ln119_reg_2538 xor ap_const_lv1_1);
    xor_ln124_fu_1510_p2 <= (icmp_ln124_reg_2543 xor ap_const_lv1_1);
    xor_ln129_fu_1542_p2 <= (icmp_ln129_reg_2548 xor ap_const_lv1_1);
    xor_ln130_fu_1283_p2 <= (zext_ln108_fu_1279_p1 xor ap_const_lv8_FF);
    xor_ln74_fu_1658_p2 <= (icmp_ln74_reg_2565 xor ap_const_lv1_1);
    xor_ln75_fu_1812_p2 <= (icmp_ln75_reg_2576 xor ap_const_lv1_1);
    xor_ln76_fu_1889_p2 <= (icmp_ln76_reg_2510 xor ap_const_lv1_1);
    xs_exp_1_fu_1851_p4 <= data_2_fu_1843_p3(30 downto 23);
    xs_exp_fu_1697_p4 <= data_1_fu_1689_p3(30 downto 23);
    zext_ln103_fu_1268_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln100_reg_2396),64));
    zext_ln108_1_fu_1289_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln130_fu_1283_p2),64));
    zext_ln108_fu_1279_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln108_fu_1274_p2),8));
    zext_ln136_1_fu_1588_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_first_r_loc_1_phi_fu_688_p6),9));
    zext_ln136_fu_1584_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_last_r_loc_0_phi_fu_701_p6),9));
    zext_ln137_1_fu_1608_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_first_b_loc_1_phi_fu_712_p6),9));
    zext_ln137_fu_1604_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_last_b_loc_1_phi_fu_725_p6),9));
    zext_ln138_1_fu_1638_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_reg_pp0_iter1_first_g_loc_1_reg_748),9));
    zext_ln138_fu_1634_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_reg_pp0_iter1_last_g_loc_1_reg_761),9));
    zext_ln144_fu_1341_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln143_reg_2464),64));
    zext_ln145_fu_1347_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln145_reg_2469),64));
    zext_ln346_1_fu_1865_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xs_exp_1_fu_1851_p4),9));
    zext_ln346_2_fu_2005_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xs_exp_2_reg_2748),9));
    zext_ln346_3_fu_1137_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xs_exp_4_reg_2353),9));
    zext_ln346_fu_1711_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xs_exp_fu_1697_p4),9));
    zext_ln68_1_fu_1748_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mantissa_fu_1739_p4),55));
    zext_ln68_2_fu_1954_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mantissa_1_fu_1945_p4),55));
    zext_ln68_3_fu_2057_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mantissa_2_fu_2048_p4),55));
    zext_ln68_4_fu_1133_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mantissa_3_fu_1124_p4),79));
    zext_ln68_fu_920_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_in_fu_878_p1),64));
    zext_ln69_fu_925_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(g_in_fu_892_p4),64));
    zext_ln70_fu_930_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_in_fu_882_p4),64));
    zext_ln71_1_fu_1971_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln71_3_fu_1967_p1),55));
    zext_ln71_2_fu_2064_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln71_5_fu_2061_p1),55));
    zext_ln71_3_fu_1175_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln71_7_fu_1171_p1),79));
    zext_ln71_fu_1765_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln71_1_fu_1761_p1),55));
    zext_ln74_1_fu_1093_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(first_r),32));
    zext_ln74_2_fu_1803_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_reg_2697),8));
    zext_ln74_3_fu_2039_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_reg_2764),8));
    zext_ln74_4_fu_2098_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_reg_2789),8));
    zext_ln74_5_fu_1238_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_11_reg_2381),32));
    zext_ln74_fu_935_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_in_fu_878_p1),32));
    zext_ln75_1_fu_1068_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(first_g),32));
    zext_ln75_fu_972_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(g_in_reg_2192),32));
    zext_ln76_1_fu_1045_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(first_b),32));
    zext_ln76_fu_1012_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_in_reg_2185),32));
    zext_ln80_fu_2115_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(d_fu_2107_p4),32));
    zext_ln89_fu_1055_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln87_reg_2254),64));
end behav;
